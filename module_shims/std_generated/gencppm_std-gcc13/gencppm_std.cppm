module;
#include "gencppm_std.hpp"
export module std;

export {
namespace std {
using ::std::size_t;
using ::std::ptrdiff_t;
using ::std::nullptr_t;
using ::std::__is_constant_evaluated;
using ::std::max_align_t;
using ::std::byte;
using ::std::__byte_operand;
using ::std::__byte_op_t;
using ::std::operator<<;
using ::std::operator>>;
using ::std::operator|;
using ::std::operator&;
using ::std::operator^;
using ::std::operator~;
using ::std::operator<<=;
using ::std::operator>>=;
using ::std::operator|=;
using ::std::operator&=;
using ::std::operator^=;
using ::std::to_integer;
using ::std::int8_t;
using ::std::int16_t;
using ::std::int32_t;
using ::std::int64_t;
using ::std::int_fast8_t;
using ::std::int_fast16_t;
using ::std::int_fast32_t;
using ::std::int_fast64_t;
using ::std::int_least8_t;
using ::std::int_least16_t;
using ::std::int_least32_t;
using ::std::int_least64_t;
using ::std::intmax_t;
using ::std::intptr_t;
using ::std::uint8_t;
using ::std::uint16_t;
using ::std::uint32_t;
using ::std::uint64_t;
using ::std::uint_fast8_t;
using ::std::uint_fast16_t;
using ::std::uint_fast32_t;
using ::std::uint_fast64_t;
using ::std::uint_least8_t;
using ::std::uint_least16_t;
using ::std::uint_least32_t;
using ::std::uint_least64_t;
using ::std::uintmax_t;
using ::std::uintptr_t;
using ::std::reference_wrapper;
using ::std::integral_constant;
using ::std::true_type;
using ::std::false_type;
using ::std::__bool_constant;
using ::std::bool_constant;
using ::std::enable_if;
using ::std::__enable_if_t;
using ::std::__conditional;
using ::std::__conditional_t;
using ::std::__type_identity;
using ::std::__type_identity_t;
namespace __detail {
using ::std::__detail::__first_t;
using ::std::__detail::__or_fn;
using ::std::__detail::__and_fn;
using ::std::__detail::__disjunction_impl;
using ::std::__detail::__conjunction_impl;
using ::std::__detail::__same_as;
using ::std::__detail::__cref;
using ::std::__detail::__class_or_enum;
using ::std::__detail::__destructible_impl;
using ::std::__detail::__destructible;
using ::std::__detail::__boolean_testable_impl;
using ::std::__detail::__boolean_testable;
using ::std::__detail::__weakly_eq_cmp_with;
using ::std::__detail::__partially_ordered_with;
using ::std::__detail::__cmp_cat_id;
using ::std::__detail::__common_cmp_cat;
using ::std::__detail::__compares_as;
using ::std::__detail::__cmp3way_res_t;
using ::std::__detail::__cmp3way_res_impl;
using ::std::__detail::__3way_builtin_ptr_cmp;
using ::std::__detail::_Synth3way;
using ::std::__detail::__synth3way;
using ::std::__detail::__synth3way_t;
namespace __variant {
using ::std::__detail::__variant::_Never_valueless_alt;
using ::std::__detail::__variant::__variant_cookie;
using ::std::__detail::__variant::__variant_idx_cookie;
using ::std::__detail::__variant::__deduce_visit_result;
using ::std::__detail::__variant::__raw_visit;
using ::std::__detail::__variant::__raw_idx_visit;
using ::std::__detail::__variant::__as;
using ::std::__detail::__variant::_Uninitialized;
using ::std::__detail::__variant::__get_n;
using ::std::__detail::__variant::__get;
using ::std::__detail::__variant::__construct_n;
using ::std::__detail::__variant::_Traits;
using ::std::__detail::__variant::_Variadic_union;
using ::std::__detail::__variant::__never_valueless;
using ::std::__detail::__variant::_Variant_storage;
using ::std::__detail::__variant::__select_index;
using ::std::__detail::__variant::__emplace;
using ::std::__detail::__variant::_Variant_storage_alias;
using ::std::__detail::__variant::_Copy_ctor_base;
using ::std::__detail::__variant::_Copy_ctor_alias;
using ::std::__detail::__variant::_Move_ctor_base;
using ::std::__detail::__variant::_Move_ctor_alias;
using ::std::__detail::__variant::_Copy_assign_base;
using ::std::__detail::__variant::_Copy_assign_alias;
using ::std::__detail::__variant::_Move_assign_base;
using ::std::__detail::__variant::_Move_assign_alias;
using ::std::__detail::__variant::_Variant_base;
using ::std::__detail::__variant::__exactly_once;
using ::std::__detail::__variant::_Arr;
using ::std::__detail::__variant::_Build_FUN;
using ::std::__detail::__variant::_Build_FUNs;
using ::std::__detail::__variant::_FUN_type;
using ::std::__detail::__variant::__accepted_index;
using ::std::__detail::__variant::__extra_visit_slot_needed;
using ::std::__detail::__variant::_Multi_array;
using ::std::__detail::__variant::__gen_vtable_impl;
using ::std::__detail::__variant::__gen_vtable;
using ::std::__detail::__variant::_Base_dedup;
using ::std::__detail::__variant::_Variant_hash_base;
using ::std::__detail::__variant::__get_t;
using ::std::__detail::__variant::__visit_result_t;
using ::std::__detail::__variant::__same_types;
using ::std::__detail::__variant::__check_visitor_results;
} // namespace __variant
using ::std::__detail::__with_ref;
using ::std::__detail::__can_reference;
using ::std::__detail::__dereferenceable;
using ::std::__detail::__primary_traits_iter;
using ::std::__detail::__iter_traits_impl;
using ::std::__detail::__iter_traits;
using ::std::__detail::__iter_diff_t;
using ::std::__detail::__cond_value_type;
using ::std::__detail::__has_member_value_type;
using ::std::__detail::__has_member_element_type;
using ::std::__detail::__iter_value_t;
using ::std::__detail::__cpp17_iterator;
using ::std::__detail::__cpp17_input_iterator;
using ::std::__detail::__cpp17_fwd_iterator;
using ::std::__detail::__cpp17_bidi_iterator;
using ::std::__detail::__cpp17_randacc_iterator;
using ::std::__detail::__iter_with_nested_types;
using ::std::__detail::__iter_without_nested_types;
using ::std::__detail::__iter_without_category;
using ::std::__detail::__iter_concept_impl;
using ::std::__detail::__iter_concept;
using ::std::__detail::__indirectly_readable_impl;
using ::std::__detail::__is_signed_integer_like;
using ::std::__detail::__projected;
using ::std::__detail::__range_iter_t;
using ::std::__detail::__clamp_iter_cat;
using ::std::__detail::__different_from;
using ::std::__detail::__move_iter_cat;
using ::std::__detail::__common_iter_has_arrow;
using ::std::__detail::__common_iter_use_postfix_proxy;
using ::std::__detail::__counted_iter_value_type;
using ::std::__detail::__counted_iter_concept;
using ::std::__detail::__counted_iter_cat;
using ::std::__detail::__constant_iterator;
using ::std::__detail::__is_const_iterator;
using ::std::__detail::__not_a_const_iterator;
using ::std::__detail::__iter_const_rvalue_reference_t;
using ::std::__detail::__basic_const_iterator_iter_cat;
using ::std::__detail::__const_sentinel;
using ::std::__detail::__char_traits_cmp_cat;
using ::std::__detail::__integer_to_chars_is_unsigned;
using ::std::__detail::__to_chars_len;
using ::std::__detail::__to_chars_10_impl;
using ::std::__detail::_Power_of_2;
using ::std::__detail::__return_temporary_buffer;
using ::std::__detail::_MakeUniq;
using ::std::__detail::__unique_ptr_t;
using ::std::__detail::__unique_ptr_array_t;
using ::std::__detail::__invalid_make_unique_t;
using ::std::__detail::_Scoped_ptr;
using ::std::__detail::_Quoted_string;
using ::std::__detail::operator<<;
using ::std::__detail::operator>>;
using ::std::__detail::__integer_to_chars_result_type;
using ::std::__detail::__to_chars_unsigned_type;
using ::std::__detail::__unsigned_least_t;
using ::std::__detail::__to_chars_len_2;
using ::std::__detail::__to_chars;
using ::std::__detail::__to_chars_16;
using ::std::__detail::__to_chars_10;
using ::std::__detail::__to_chars_8;
using ::std::__detail::__to_chars_2;
using ::std::__detail::__raise_and_add;
using ::std::__detail::__from_chars_alnum_to_val_table;
using ::std::__detail::__from_chars_alnum_to_val;
using ::std::__detail::__from_chars_pow2_base;
using ::std::__detail::__from_chars_alnum;
using ::std::__detail::__integer_from_chars_result_type;
using ::std::__detail::__is_span;
using ::std::__detail::__is_std_array;
using ::std::__detail::__extent_storage;
using ::std::__detail::_Hashtable_base;
using ::std::__detail::__distance_fw;
using ::std::__detail::_Identity;
using ::std::__detail::_Select1st;
using ::std::__detail::_ConvertToValueType;
using ::std::__detail::_NodeBuilder;
using ::std::__detail::_Hashtable_alloc;
using ::std::__detail::_ReuseOrAllocNode;
using ::std::__detail::_AllocNode;
using ::std::__detail::_Hashtable_traits;
using ::std::__detail::_Hashtable_hash_traits;
using ::std::__detail::_Hash_node_base;
using ::std::__detail::_Hash_node_value_base;
using ::std::__detail::_Hash_node_code_cache;
using ::std::__detail::_Hash_node_value;
using ::std::__detail::_Hash_node;
using ::std::__detail::_Node_iterator_base;
using ::std::__detail::_Node_iterator;
using ::std::__detail::_Node_const_iterator;
using ::std::__detail::_Mod_range_hashing;
using ::std::__detail::_Default_ranged_hash;
using ::std::__detail::_Prime_rehash_policy;
using ::std::__detail::_Mask_range_hashing;
using ::std::__detail::__clp2;
using ::std::__detail::_Power2_rehash_policy;
using ::std::__detail::_Map_base;
using ::std::__detail::_Insert_base;
using ::std::__detail::_Insert;
using ::std::__detail::__has_load_factor;
using ::std::__detail::_Rehash_base;
using ::std::__detail::_Hashtable_ebo_helper;
using ::std::__detail::_Local_iterator_base;
using ::std::__detail::_Hash_code_base;
using ::std::__detail::_Hash_code_storage;
using ::std::__detail::__hash_code_for_local_iter;
using ::std::__detail::_Local_iterator;
using ::std::__detail::_Local_const_iterator;
using ::std::__detail::_Equality;
using ::std::__detail::__erase_nodes_if;
using ::std::__detail::__platform_wait_t;
using ::std::__detail::__platform_wait_alignment;
using ::std::__detail::__futex_wait_flags;
using ::std::__detail::__platform_wait;
using ::std::__detail::__platform_notify;
using ::std::__detail::__thread_yield;
using ::std::__detail::__thread_relax;
using ::std::__detail::__atomic_spin_count_relax;
using ::std::__detail::__atomic_spin_count;
using ::std::__detail::__default_spin_policy;
using ::std::__detail::__atomic_spin;
using ::std::__detail::__atomic_compare;
using ::std::__detail::__waiter_pool_base;
using ::std::__detail::__waiter_pool;
using ::std::__detail::__waiter_base;
using ::std::__detail::__waiter;
using ::std::__detail::__enters_wait;
using ::std::__detail::__bare_wait;
using ::std::__detail::_List_node_base;
using ::std::__detail::_List_node_header;
using ::std::__detail::_Scratch_list;
using ::std::__detail::__abs_r;
using ::std::__detail::__gcd;
using ::std::__detail::__floating_point_constant;
using ::std::__detail::__numeric_constants;
using ::std::__detail::__isnan;
using ::std::__detail::__bernoulli_series;
using ::std::__detail::__bernoulli;
using ::std::__detail::__log_gamma_bernoulli;
using ::std::__detail::__log_gamma_lanczos;
using ::std::__detail::__log_gamma;
using ::std::__detail::__log_gamma_sign;
using ::std::__detail::__log_bincoef;
using ::std::__detail::__bincoef;
using ::std::__detail::__gamma;
using ::std::__detail::__psi_series;
using ::std::__detail::__psi_asymp;
using ::std::__detail::__psi;
using ::std::__detail::__gamma_temme;
using ::std::__detail::__bessel_jn;
using ::std::__detail::__cyl_bessel_jn_asymp;
using ::std::__detail::__cyl_bessel_ij_series;
using ::std::__detail::__cyl_bessel_j;
using ::std::__detail::__cyl_neumann_n;
using ::std::__detail::__sph_bessel_jn;
using ::std::__detail::__sph_bessel;
using ::std::__detail::__sph_neumann;
using ::std::__detail::__beta_gamma;
using ::std::__detail::__beta_lgamma;
using ::std::__detail::__beta_product;
using ::std::__detail::__beta;
using ::std::__detail::__ellint_rf;
using ::std::__detail::__comp_ellint_1_series;
using ::std::__detail::__comp_ellint_1;
using ::std::__detail::__ellint_1;
using ::std::__detail::__comp_ellint_2_series;
using ::std::__detail::__ellint_rd;
using ::std::__detail::__comp_ellint_2;
using ::std::__detail::__ellint_2;
using ::std::__detail::__ellint_rc;
using ::std::__detail::__ellint_rj;
using ::std::__detail::__comp_ellint_3;
using ::std::__detail::__ellint_3;
using ::std::__detail::__expint_E1;
using ::std::__detail::__expint_E1_series;
using ::std::__detail::__expint_E1_asymp;
using ::std::__detail::__expint_En_series;
using ::std::__detail::__expint_En_cont_frac;
using ::std::__detail::__expint_En_recursion;
using ::std::__detail::__expint_Ei_series;
using ::std::__detail::__expint_Ei_asymp;
using ::std::__detail::__expint_Ei;
using ::std::__detail::__expint_asymp;
using ::std::__detail::__expint_large_n;
using ::std::__detail::__expint;
using ::std::__detail::__conf_hyperg_series;
using ::std::__detail::__conf_hyperg_luke;
using ::std::__detail::__conf_hyperg;
using ::std::__detail::__hyperg_series;
using ::std::__detail::__hyperg_luke;
using ::std::__detail::__hyperg_reflect;
using ::std::__detail::__hyperg;
using ::std::__detail::__poly_legendre_p;
using ::std::__detail::__assoc_legendre_p;
using ::std::__detail::__sph_legendre;
using ::std::__detail::__bessel_ik;
using ::std::__detail::__cyl_bessel_i;
using ::std::__detail::__cyl_bessel_k;
using ::std::__detail::__sph_bessel_ik;
using ::std::__detail::__airy;
using ::std::__detail::__poly_hermite_recursion;
using ::std::__detail::__poly_hermite;
using ::std::__detail::__poly_laguerre_large_n;
using ::std::__detail::__poly_laguerre_hyperg;
using ::std::__detail::__poly_laguerre_recursion;
using ::std::__detail::__poly_laguerre;
using ::std::__detail::__assoc_laguerre;
using ::std::__detail::__laguerre;
using ::std::__detail::__riemann_zeta_sum;
using ::std::__detail::__riemann_zeta_alt;
using ::std::__detail::__riemann_zeta_glob;
using ::std::__detail::__riemann_zeta_product;
using ::std::__detail::__riemann_zeta;
using ::std::__detail::__hurwitz_zeta_glob;
using ::std::__detail::__hurwitz_zeta;
using ::std::__detail::_Shift;
using ::std::__detail::_Select_uint_least_t;
using ::std::__detail::_Mod;
using ::std::__detail::__mod;
using ::std::__detail::_Adaptor;
using ::std::__detail::__seed_seq_generate_t;
using ::std::__detail::_If_seed_seq_for;
using ::std::__detail::__normalize;
using ::std::__detail::__representable_as_double;
using ::std::__detail::__p1_representable_as_double;
using ::std::__detail::__extract_params;
using ::std::__detail::_UnClos;
using ::std::__detail::_BinClos;
using ::std::__detail::_SClos;
using ::std::__detail::_GClos;
using ::std::__detail::_IClos;
using ::std::__detail::_ValFunClos;
using ::std::__detail::_RefFunClos;
using ::std::__detail::_ValArrayRef;
using ::std::__detail::_FunBase;
using ::std::__detail::_UnBase;
using ::std::__detail::_BinBase;
using ::std::__detail::_BinBase2;
using ::std::__detail::_BinBase1;
using ::std::__detail::_SBase;
using ::std::__detail::_GBase;
using ::std::__detail::_IBase;
using ::std::__detail::_StateIdT;
using ::std::__detail::_S_invalid_state_id;
using ::std::__detail::_Matcher;
using ::std::__detail::_Opcode;
using ::std::__detail::_State_base;
using ::std::__detail::_State;
using ::std::__detail::_NFA_base;
using ::std::__detail::_NFA;
using ::std::__detail::_StateSeq;
using ::std::__detail::_ScannerBase;
using ::std::__detail::_Scanner;
using ::std::__detail::_BracketMatcher;
using ::std::__detail::_Compiler;
using ::std::__detail::_RegexTranslatorBase;
using ::std::__detail::_RegexTranslator;
using ::std::__detail::_AnyMatcher;
using ::std::__detail::_CharMatcher;
using ::std::__detail::_RegexExecutorPolicy;
using ::std::__detail::__regex_algo_impl;
using ::std::__detail::_Executor;
using ::std::__detail::__is_contiguous_iter;
using ::std::__detail::_Backref_matcher;
using ::std::__detail::__wait_clock_t;
using ::std::__detail::__to_wait_clock;
using ::std::__detail::__platform_wait_until_impl;
using ::std::__detail::__platform_wait_until;
using ::std::__detail::__cond_wait_until_impl;
using ::std::__detail::__cond_wait_until;
using ::std::__detail::__timed_waiter_pool;
using ::std::__detail::__timed_backoff_spin_policy;
using ::std::__detail::__timed_waiter;
using ::std::__detail::__enters_timed_wait;
using ::std::__detail::__bare_timed_wait;
using ::std::__detail::__try_lock_impl;
using ::std::__detail::__lock_impl;
} // namespace __detail
using ::std::__or_;
using ::std::__and_;
using ::std::__not_;
using ::std::__or_v;
using ::std::__and_v;
using ::std::conjunction;
using ::std::disjunction;
using ::std::negation;
using ::std::conjunction_v;
using ::std::disjunction_v;
using ::std::negation_v;
using ::std::is_reference;
using ::std::is_function;
using ::std::is_void;
using ::std::remove_cv;
using ::std::is_const;
using ::std::__is_array_unknown_bounds;
using ::std::__is_complete_or_unbounded;
using ::std::__remove_cv_t;
using ::std::__is_integral_helper;
using ::std::is_integral;
using ::std::__is_floating_point_helper;
using ::std::is_floating_point;
using ::std::is_array;
using ::std::__is_pointer_helper;
using ::std::is_pointer;
using ::std::is_lvalue_reference;
using ::std::is_rvalue_reference;
using ::std::__is_member_object_pointer_helper;
using ::std::is_member_object_pointer;
using ::std::__is_member_function_pointer_helper;
using ::std::is_member_function_pointer;
using ::std::is_enum;
using ::std::is_union;
using ::std::is_class;
using ::std::is_null_pointer;
using ::std::__is_nullptr_t;
using ::std::is_arithmetic;
using ::std::is_fundamental;
using ::std::is_object;
using ::std::is_member_pointer;
using ::std::is_scalar;
using ::std::is_compound;
using ::std::__is_member_pointer_helper;
using ::std::is_same;
using ::std::__is_one_of;
using ::std::__is_signed_integer;
using ::std::__is_unsigned_integer;
using ::std::__is_standard_integer;
using ::std::__void_t;
using ::std::is_volatile;
using ::std::is_trivial;
using ::std::is_trivially_copyable;
using ::std::is_standard_layout;
using ::std::is_pod;
using ::std::is_literal_type;
using ::std::is_empty;
using ::std::is_polymorphic;
using ::std::is_final;
using ::std::is_abstract;
using ::std::__is_signed_helper;
using ::std::is_signed;
using ::std::is_unsigned;
using ::std::__declval;
using ::std::declval;
using ::std::remove_all_extents;
using ::std::__is_array_known_bounds;
using ::std::__do_is_destructible_impl;
using ::std::__is_destructible_impl;
using ::std::__is_destructible_safe;
using ::std::is_destructible;
using ::std::__do_is_nt_destructible_impl;
using ::std::__is_nt_destructible_impl;
using ::std::__is_nt_destructible_safe;
using ::std::is_nothrow_destructible;
using ::std::__is_constructible_impl;
using ::std::is_constructible;
using ::std::is_default_constructible;
using ::std::__add_lvalue_reference_helper;
using ::std::__add_lval_ref_t;
using ::std::is_copy_constructible;
using ::std::__add_rvalue_reference_helper;
using ::std::__add_rval_ref_t;
using ::std::is_move_constructible;
using ::std::__is_nothrow_constructible_impl;
using ::std::is_nothrow_constructible;
using ::std::is_nothrow_default_constructible;
using ::std::is_nothrow_copy_constructible;
using ::std::is_nothrow_move_constructible;
using ::std::__is_assignable_impl;
using ::std::is_assignable;
using ::std::is_copy_assignable;
using ::std::is_move_assignable;
using ::std::__is_nothrow_assignable_impl;
using ::std::is_nothrow_assignable;
using ::std::is_nothrow_copy_assignable;
using ::std::is_nothrow_move_assignable;
using ::std::__is_trivially_constructible_impl;
using ::std::is_trivially_constructible;
using ::std::is_trivially_default_constructible;
using ::std::__do_is_implicitly_default_constructible_impl;
using ::std::__is_implicitly_default_constructible_impl;
using ::std::__is_implicitly_default_constructible_safe;
using ::std::__is_implicitly_default_constructible;
using ::std::is_trivially_copy_constructible;
using ::std::is_trivially_move_constructible;
using ::std::__is_trivially_assignable_impl;
using ::std::is_trivially_assignable;
using ::std::is_trivially_copy_assignable;
using ::std::is_trivially_move_assignable;
using ::std::is_trivially_destructible;
using ::std::has_virtual_destructor;
using ::std::alignment_of;
using ::std::rank;
using ::std::extent;
using ::std::is_base_of;
using ::std::is_convertible;
using ::std::__is_array_convertible;
using ::std::__is_nt_convertible_helper;
using ::std::is_nothrow_convertible;
using ::std::is_nothrow_convertible_v;
using ::std::remove_const;
using ::std::remove_volatile;
using ::std::add_const;
using ::std::add_volatile;
using ::std::add_cv;
using ::std::remove_const_t;
using ::std::remove_volatile_t;
using ::std::remove_cv_t;
using ::std::add_const_t;
using ::std::add_volatile_t;
using ::std::add_cv_t;
using ::std::remove_reference;
using ::std::add_lvalue_reference;
using ::std::add_rvalue_reference;
using ::std::remove_reference_t;
using ::std::add_lvalue_reference_t;
using ::std::add_rvalue_reference_t;
using ::std::__cv_selector;
using ::std::__match_cv_qualifiers;
using ::std::__make_unsigned;
using ::std::__make_unsigned_selector;
using ::std::__make_unsigned_selector_base;
using ::std::make_unsigned;
using ::std::__make_signed;
using ::std::__make_signed_selector;
using ::std::make_signed;
using ::std::make_signed_t;
using ::std::make_unsigned_t;
using ::std::remove_extent;
using ::std::remove_extent_t;
using ::std::remove_all_extents_t;
using ::std::__remove_pointer_helper;
using ::std::remove_pointer;
using ::std::__add_pointer_helper;
using ::std::add_pointer;
using ::std::remove_pointer_t;
using ::std::add_pointer_t;
using ::std::__aligned_storage_msa;
using ::std::aligned_storage;
using ::std::__strictest_alignment;
using ::std::aligned_union;
using ::std::__decay_selector;
using ::std::decay;
using ::std::__strip_reference_wrapper;
using ::std::__decay_t;
using ::std::__decay_and_strip;
using ::std::_Require;
using ::std::__remove_cvref_t;
using ::std::conditional;
using ::std::common_type;
using ::std::__success_type;
using ::std::__failure_type;
using ::std::__do_common_type_impl;
using ::std::__common_type_impl;
using ::std::__common_type_pack;
using ::std::__common_type_fold;
using ::std::__underlying_type_impl;
using ::std::underlying_type;
using ::std::__declval_protector;
using ::std::result_of;
using ::std::__invoke_memfun_ref;
using ::std::__invoke_memfun_deref;
using ::std::__invoke_memobj_ref;
using ::std::__invoke_memobj_deref;
using ::std::__invoke_other;
using ::std::__result_of_success;
using ::std::__result_of_memfun_ref_impl;
using ::std::__result_of_memfun_ref;
using ::std::__result_of_memfun_deref_impl;
using ::std::__result_of_memfun_deref;
using ::std::__result_of_memobj_ref_impl;
using ::std::__result_of_memobj_ref;
using ::std::__result_of_memobj_deref_impl;
using ::std::__result_of_memobj_deref;
using ::std::__result_of_memobj;
using ::std::__result_of_memfun;
using ::std::__inv_unwrap;
using ::std::__result_of_impl;
using ::std::__result_of_other_impl;
using ::std::__invoke_result;
using ::std::aligned_storage_t;
using ::std::aligned_union_t;
using ::std::decay_t;
using ::std::enable_if_t;
using ::std::conditional_t;
using ::std::common_type_t;
using ::std::underlying_type_t;
using ::std::result_of_t;
using ::std::void_t;
using ::std::__detected_or;
using ::std::__detected_or_t;
using ::std::__is_swappable;
using ::std::__is_nothrow_swappable;
using ::std::__is_tuple_like_impl;
using ::std::__is_tuple_like;
using ::std::swap;
namespace __swappable_details {
using ::std::__swappable_details::swap;
using ::std::__swappable_details::__do_is_swappable_impl;
using ::std::__swappable_details::__do_is_nothrow_swappable_impl;
} // namespace __swappable_details
using ::std::__is_swappable_impl;
using ::std::__is_nothrow_swappable_impl;
using ::std::is_swappable;
using ::std::is_nothrow_swappable;
using ::std::is_swappable_v;
using ::std::is_nothrow_swappable_v;
namespace __swappable_with_details {
using ::std::__swappable_with_details::swap;
using ::std::__swappable_with_details::__do_is_swappable_with_impl;
using ::std::__swappable_with_details::__do_is_nothrow_swappable_with_impl;
} // namespace __swappable_with_details
using ::std::__is_swappable_with_impl;
using ::std::__is_nothrow_swappable_with_impl;
using ::std::is_swappable_with;
using ::std::is_nothrow_swappable_with;
using ::std::is_swappable_with_v;
using ::std::is_nothrow_swappable_with_v;
using ::std::__is_invocable_impl;
using ::std::__is_invocable;
using ::std::__call_is_nt;
using ::std::__call_is_nothrow;
using ::std::__call_is_nothrow_;
using ::std::__is_nothrow_invocable;
using ::std::__nonesuchbase;
using ::std::__nonesuch;
using ::std::invoke_result;
using ::std::invoke_result_t;
using ::std::is_invocable;
using ::std::is_invocable_r;
using ::std::is_nothrow_invocable;
using ::std::__is_nt_invocable_impl;
using ::std::is_nothrow_invocable_r;
using ::std::is_void_v;
using ::std::is_null_pointer_v;
using ::std::is_integral_v;
using ::std::is_floating_point_v;
using ::std::is_array_v;
using ::std::is_pointer_v;
using ::std::is_lvalue_reference_v;
using ::std::is_rvalue_reference_v;
using ::std::is_member_object_pointer_v;
using ::std::is_member_function_pointer_v;
using ::std::is_enum_v;
using ::std::is_union_v;
using ::std::is_class_v;
using ::std::is_function_v;
using ::std::is_reference_v;
using ::std::is_arithmetic_v;
using ::std::is_fundamental_v;
using ::std::is_object_v;
using ::std::is_scalar_v;
using ::std::is_compound_v;
using ::std::is_member_pointer_v;
using ::std::is_const_v;
using ::std::is_volatile_v;
using ::std::is_trivial_v;
using ::std::is_trivially_copyable_v;
using ::std::is_standard_layout_v;
using ::std::is_pod_v;
using ::std::is_literal_type_v;
using ::std::is_empty_v;
using ::std::is_polymorphic_v;
using ::std::is_abstract_v;
using ::std::is_final_v;
using ::std::is_signed_v;
using ::std::is_unsigned_v;
using ::std::is_constructible_v;
using ::std::is_default_constructible_v;
using ::std::is_copy_constructible_v;
using ::std::is_move_constructible_v;
using ::std::is_assignable_v;
using ::std::is_copy_assignable_v;
using ::std::is_move_assignable_v;
using ::std::is_destructible_v;
using ::std::is_trivially_constructible_v;
using ::std::is_trivially_default_constructible_v;
using ::std::is_trivially_copy_constructible_v;
using ::std::is_trivially_move_constructible_v;
using ::std::is_trivially_assignable_v;
using ::std::is_trivially_copy_assignable_v;
using ::std::is_trivially_move_assignable_v;
using ::std::is_trivially_destructible_v;
using ::std::is_nothrow_constructible_v;
using ::std::is_nothrow_default_constructible_v;
using ::std::is_nothrow_copy_constructible_v;
using ::std::is_nothrow_move_constructible_v;
using ::std::is_nothrow_assignable_v;
using ::std::is_nothrow_copy_assignable_v;
using ::std::is_nothrow_move_assignable_v;
using ::std::is_nothrow_destructible_v;
using ::std::has_virtual_destructor_v;
using ::std::alignment_of_v;
using ::std::rank_v;
using ::std::extent_v;
using ::std::is_same_v;
using ::std::is_base_of_v;
using ::std::is_convertible_v;
using ::std::is_invocable_v;
using ::std::is_nothrow_invocable_v;
using ::std::is_invocable_r_v;
using ::std::is_nothrow_invocable_r_v;
using ::std::has_unique_object_representations;
using ::std::has_unique_object_representations_v;
using ::std::is_aggregate;
using ::std::is_aggregate_v;
using ::std::remove_cvref;
using ::std::remove_cvref_t;
using ::std::type_identity;
using ::std::type_identity_t;
using ::std::unwrap_reference;
using ::std::unwrap_reference_t;
using ::std::unwrap_ref_decay;
using ::std::unwrap_ref_decay_t;
using ::std::is_bounded_array_v;
using ::std::is_unbounded_array_v;
using ::std::is_bounded_array;
using ::std::is_unbounded_array;
using ::std::is_scoped_enum;
using ::std::is_scoped_enum_v;
using ::std::is_constant_evaluated;
using ::std::__copy_cv;
using ::std::__cond_res;
using ::std::__common_ref_impl;
using ::std::__common_ref;
using ::std::__condres_cvref;
using ::std::__common_ref_C;
using ::std::__common_ref_D;
using ::std::basic_common_reference;
using ::std::__xref;
using ::std::__basic_common_ref;
using ::std::common_reference;
using ::std::common_reference_t;
using ::std::__common_reference_impl;
using ::std::same_as;
using ::std::derived_from;
using ::std::convertible_to;
using ::std::common_reference_with;
using ::std::common_with;
using ::std::integral;
using ::std::signed_integral;
using ::std::unsigned_integral;
using ::std::floating_point;
using ::std::assignable_from;
using ::std::destructible;
using ::std::constructible_from;
using ::std::default_initializable;
using ::std::move_constructible;
using ::std::copy_constructible;
namespace ranges {
namespace __cust_swap {
using ::std::ranges::__cust_swap::swap;
using ::std::ranges::__cust_swap::__adl_swap;
using ::std::ranges::__cust_swap::_Swap;
} // namespace __cust_swap
inline namespace __cust {
using ::std::ranges::__cust::swap;
using ::std::ranges::__cust::iter_move;
using ::std::ranges::__cust::iter_swap;
using ::std::ranges::__cust::begin;
using ::std::ranges::__cust::end;
using ::std::ranges::__cust::rbegin;
using ::std::ranges::__cust::rend;
using ::std::ranges::__cust::size;
using ::std::ranges::__cust::ssize;
using ::std::ranges::__cust::empty;
using ::std::ranges::__cust::data;
using ::std::ranges::__cust::cbegin;
using ::std::ranges::__cust::cend;
using ::std::ranges::__cust::crbegin;
using ::std::ranges::__cust::crend;
using ::std::ranges::__cust::cdata;
} // namespace __cust
namespace __detail {
using ::std::ranges::__detail::__less_builtin_ptr_cmp;
using ::std::ranges::__detail::__max_diff_type;
using ::std::ranges::__detail::__max_size_type;
using ::std::ranges::__detail::__is_signed_int128;
using ::std::ranges::__detail::__is_unsigned_int128;
using ::std::ranges::__detail::__cv_bool;
using ::std::ranges::__detail::__integral_nonbool;
using ::std::ranges::__detail::__is_int128;
using ::std::ranges::__detail::__is_integer_like;
using ::std::ranges::__detail::__is_signed_integer_like;
using ::std::ranges::__detail::__to_unsigned_like;
using ::std::ranges::__detail::__make_unsigned_like_t;
using ::std::ranges::__detail::__maybe_borrowed_range;
using ::std::ranges::__detail::__is_derived_from_view_interface_fn;
using ::std::ranges::__detail::__is_derived_from_view_interface;
using ::std::ranges::__detail::__is_initializer_list;
using ::std::ranges::__detail::__simple_view;
using ::std::ranges::__detail::__has_arrow;
using ::std::ranges::__detail::__different_from;
using ::std::ranges::__detail::__uses_nonqualification_pointer_conversion;
using ::std::ranges::__detail::__convertible_to_non_slicing;
using ::std::ranges::__detail::__pair_like;
using ::std::ranges::__detail::__pair_like_convertible_from;
using ::std::ranges::__detail::__is_normal_iterator;
using ::std::ranges::__detail::__is_reverse_iterator;
using ::std::ranges::__detail::__is_move_iterator;
using ::std::ranges::__detail::__voidify;
using ::std::ranges::__detail::__nothrow_input_iterator;
using ::std::ranges::__detail::__nothrow_sentinel;
using ::std::ranges::__detail::__nothrow_input_range;
using ::std::ranges::__detail::__nothrow_forward_iterator;
using ::std::ranges::__detail::__nothrow_forward_range;
using ::std::ranges::__detail::_DestroyGuard;
using ::std::ranges::__detail::__boxable;
using ::std::ranges::__detail::__box;
using ::std::ranges::__detail::__to_signed_like;
using ::std::ranges::__detail::__iota_diff_t;
using ::std::ranges::__detail::__decrementable;
using ::std::ranges::__detail::__advanceable;
using ::std::ranges::__detail::__iota_view_iter_cat;
using ::std::ranges::__detail::__stream_extractable;
using ::std::ranges::__detail::_Empty;
using ::std::ranges::__detail::__maybe_present_t;
using ::std::ranges::__detail::__maybe_const_t;
using ::std::ranges::__detail::__non_propagating_cache;
using ::std::ranges::__detail::_CachedPosition;
using ::std::ranges::__detail::__filter_view_iter_cat;
using ::std::ranges::__detail::__require_constant;
using ::std::ranges::__detail::__tiny_range;
using ::std::ranges::__detail::__lazy_split_view_outer_iter_cat;
using ::std::ranges::__detail::__lazy_split_view_inner_iter_cat;
using ::std::ranges::__detail::__has_tuple_element;
using ::std::ranges::__detail::__returnable_element;
using ::std::ranges::__detail::__zip_is_common;
using ::std::ranges::__detail::__tuple_or_pair;
using ::std::ranges::__detail::__tuple_or_pair_t;
using ::std::ranges::__detail::__tuple_transform;
using ::std::ranges::__detail::__tuple_for_each;
using ::std::ranges::__detail::__all_random_access;
using ::std::ranges::__detail::__all_bidirectional;
using ::std::ranges::__detail::__all_forward;
using ::std::ranges::__detail::__zip_view_iter_cat;
using ::std::ranges::__detail::__range_iter_cat;
using ::std::ranges::__detail::__repeated_tuple;
using ::std::ranges::__detail::__unarize;
using ::std::ranges::__detail::__div_ceil;
using ::std::ranges::__detail::__slide_caches_nothing;
using ::std::ranges::__detail::__slide_caches_last;
using ::std::ranges::__detail::__slide_caches_first;
using ::std::ranges::__detail::__compatible_joinable_ranges;
using ::std::ranges::__detail::__bidirectional_common;
using ::std::ranges::__detail::__cartesian_product_is_random_access;
using ::std::ranges::__detail::__cartesian_product_common_arg;
using ::std::ranges::__detail::__cartesian_product_is_bidirectional;
using ::std::ranges::__detail::__cartesian_product_is_common;
using ::std::ranges::__detail::__cartesian_product_is_sized;
using ::std::ranges::__detail::__cartesian_is_sized_sentinel;
using ::std::ranges::__detail::__cartesian_common_arg_end;
using ::std::ranges::__detail::__range_with_movable_reference;
using ::std::ranges::__detail::__make_comp_proj;
using ::std::ranges::__detail::__make_pred_proj;
using ::std::ranges::__detail::__can_reread_output;
using ::std::ranges::__detail::__flipped;
using ::std::ranges::__detail::__indirectly_binary_left_foldable_impl;
using ::std::ranges::__detail::__indirectly_binary_left_foldable;
using ::std::ranges::__detail::__indirectly_binary_right_foldable;
} // namespace __detail
using ::std::ranges::equal_to;
using ::std::ranges::not_equal_to;
using ::std::ranges::less;
using ::std::ranges::greater;
using ::std::ranges::greater_equal;
using ::std::ranges::less_equal;
namespace __cust_imove {
using ::std::ranges::__cust_imove::iter_move;
using ::std::ranges::__cust_imove::__adl_imove;
using ::std::ranges::__cust_imove::_IMove;
} // namespace __cust_imove
namespace __cust_iswap {
using ::std::ranges::__cust_iswap::iter_swap;
using ::std::ranges::__cust_iswap::__adl_iswap;
using ::std::ranges::__cust_iswap::__iter_exchange_move;
using ::std::ranges::__cust_iswap::_IterSwap;
} // namespace __cust_iswap
namespace __cust_access {
using ::std::ranges::__cust_access::__class_or_enum;
using ::std::ranges::__cust_access::_Decay_copy;
using ::std::ranges::__cust_access::__decay_copy;
using ::std::ranges::__cust_access::__member_begin;
using ::std::ranges::__cust_access::begin;
using ::std::ranges::__cust_access::__adl_begin;
using ::std::ranges::__cust_access::__begin;
using ::std::ranges::__cust_access::__maybe_borrowed_range;
using ::std::ranges::__cust_access::__range_iter_t;
using ::std::ranges::__cust_access::_Begin;
using ::std::ranges::__cust_access::__member_end;
using ::std::ranges::__cust_access::end;
using ::std::ranges::__cust_access::__adl_end;
using ::std::ranges::__cust_access::_End;
using ::std::ranges::__cust_access::__member_rbegin;
using ::std::ranges::__cust_access::rbegin;
using ::std::ranges::__cust_access::__adl_rbegin;
using ::std::ranges::__cust_access::__reversable;
using ::std::ranges::__cust_access::_RBegin;
using ::std::ranges::__cust_access::__member_rend;
using ::std::ranges::__cust_access::rend;
using ::std::ranges::__cust_access::__adl_rend;
using ::std::ranges::__cust_access::_REnd;
using ::std::ranges::__cust_access::__member_size;
using ::std::ranges::__cust_access::size;
using ::std::ranges::__cust_access::__adl_size;
using ::std::ranges::__cust_access::__sentinel_size;
using ::std::ranges::__cust_access::_Size;
using ::std::ranges::__cust_access::_SSize;
using ::std::ranges::__cust_access::__member_empty;
using ::std::ranges::__cust_access::__size0_empty;
using ::std::ranges::__cust_access::__eq_iter_empty;
using ::std::ranges::__cust_access::_Empty;
using ::std::ranges::__cust_access::__pointer_to_object;
using ::std::ranges::__cust_access::__member_data;
using ::std::ranges::__cust_access::__begin_data;
using ::std::ranges::__cust_access::_Data;
using ::std::ranges::__cust_access::__possibly_const_range;
using ::std::ranges::__cust_access::_CBegin;
using ::std::ranges::__cust_access::_CEnd;
using ::std::ranges::__cust_access::_CRBegin;
using ::std::ranges::__cust_access::_CREnd;
using ::std::ranges::__cust_access::_CData;
} // namespace __cust_access
using ::std::ranges::disable_sized_range;
using ::std::ranges::enable_borrowed_range;
using ::std::ranges::range;
using ::std::ranges::borrowed_range;
using ::std::ranges::iterator_t;
using ::std::ranges::sentinel_t;
using ::std::ranges::const_iterator_t;
using ::std::ranges::const_sentinel_t;
using ::std::ranges::range_const_reference_t;
using ::std::ranges::range_difference_t;
using ::std::ranges::range_value_t;
using ::std::ranges::range_reference_t;
using ::std::ranges::range_rvalue_reference_t;
using ::std::ranges::sized_range;
using ::std::ranges::range_size_t;
using ::std::ranges::view_interface;
using ::std::ranges::view_base;
using ::std::ranges::enable_view;
using ::std::ranges::view;
using ::std::ranges::output_range;
using ::std::ranges::input_range;
using ::std::ranges::forward_range;
using ::std::ranges::bidirectional_range;
using ::std::ranges::random_access_range;
using ::std::ranges::contiguous_range;
using ::std::ranges::common_range;
using ::std::ranges::constant_range;
using ::std::ranges::viewable_range;
using ::std::ranges::__advance_fn;
using ::std::ranges::advance;
using ::std::ranges::__distance_fn;
using ::std::ranges::distance;
using ::std::ranges::__next_fn;
using ::std::ranges::next;
using ::std::ranges::__prev_fn;
using ::std::ranges::prev;
using ::std::ranges::dangling;
using ::std::ranges::borrowed_iterator_t;
namespace views {
using ::std::ranges::views::_Drop;
using ::std::ranges::views::empty;
namespace __detail {
using ::std::ranges::views::__detail::__can_single_view;
using ::std::ranges::views::__detail::__can_iota_view;
using ::std::ranges::views::__detail::__can_istream_view;
using ::std::ranges::views::__detail::__can_ref_view;
using ::std::ranges::views::__detail::__can_owning_view;
using ::std::ranges::views::__detail::__can_filter_view;
using ::std::ranges::views::__detail::__can_transform_view;
using ::std::ranges::views::__detail::__is_empty_view;
using ::std::ranges::views::__detail::__is_basic_string_view;
using ::std::ranges::views::__detail::__is_subrange;
using ::std::ranges::views::__detail::__is_iota_view;
using ::std::ranges::views::__detail::__is_repeat_view;
using ::std::ranges::views::__detail::__take_of_repeat_view;
using ::std::ranges::views::__detail::__can_take_view;
using ::std::ranges::views::__detail::__can_take_while_view;
using ::std::ranges::views::__detail::__drop_of_repeat_view;
using ::std::ranges::views::__detail::__can_drop_view;
using ::std::ranges::views::__detail::__can_drop_while_view;
using ::std::ranges::views::__detail::__can_join_view;
using ::std::ranges::views::__detail::__can_lazy_split_view;
using ::std::ranges::views::__detail::__can_split_view;
using ::std::ranges::views::__detail::__already_common;
using ::std::ranges::views::__detail::__can_common_view;
using ::std::ranges::views::__detail::__is_reversible_subrange;
using ::std::ranges::views::__detail::__is_reverse_view;
using ::std::ranges::views::__detail::__can_reverse_view;
using ::std::ranges::views::__detail::__can_elements_view;
using ::std::ranges::views::__detail::__can_zip_view;
using ::std::ranges::views::__detail::__can_zip_transform_view;
using ::std::ranges::views::__detail::__can_adjacent_view;
using ::std::ranges::views::__detail::__can_adjacent_transform_view;
using ::std::ranges::views::__detail::__can_chunk_view;
using ::std::ranges::views::__detail::__can_slide_view;
using ::std::ranges::views::__detail::__can_chunk_by_view;
using ::std::ranges::views::__detail::__can_join_with_view;
using ::std::ranges::views::__detail::__can_repeat_view;
using ::std::ranges::views::__detail::__can_bounded_repeat_view;
using ::std::ranges::views::__detail::__can_stride_view;
using ::std::ranges::views::__detail::__can_cartesian_product_view;
using ::std::ranges::views::__detail::__can_as_rvalue_view;
using ::std::ranges::views::__detail::__can_enumerate_view;
using ::std::ranges::views::__detail::__is_ref_view;
using ::std::ranges::views::__detail::__can_as_const_view;
} // namespace __detail
using ::std::ranges::views::_Single;
using ::std::ranges::views::single;
using ::std::ranges::views::_Iota;
using ::std::ranges::views::iota;
using ::std::ranges::views::_Istream;
using ::std::ranges::views::istream;
namespace __adaptor {
using ::std::ranges::views::__adaptor::__adaptor_invocable;
using ::std::ranges::views::__adaptor::__adaptor_partial_app_viable;
using ::std::ranges::views::__adaptor::_Partial;
using ::std::ranges::views::__adaptor::_Pipe;
using ::std::ranges::views::__adaptor::_RangeAdaptorClosure;
using ::std::ranges::views::__adaptor::_RangeAdaptor;
using ::std::ranges::views::__adaptor::__closure_has_simple_call_op;
using ::std::ranges::views::__adaptor::__adaptor_has_simple_extra_args;
using ::std::ranges::views::__adaptor::__pipe_invocable;
} // namespace __adaptor
using ::std::ranges::views::_All;
using ::std::ranges::views::all;
using ::std::ranges::views::all_t;
using ::std::ranges::views::_Filter;
using ::std::ranges::views::filter;
using ::std::ranges::views::_Transform;
using ::std::ranges::views::transform;
using ::std::ranges::views::_Take;
using ::std::ranges::views::take;
using ::std::ranges::views::_TakeWhile;
using ::std::ranges::views::take_while;
using ::std::ranges::views::drop;
using ::std::ranges::views::_DropWhile;
using ::std::ranges::views::drop_while;
using ::std::ranges::views::_Join;
using ::std::ranges::views::join;
using ::std::ranges::views::_LazySplit;
using ::std::ranges::views::lazy_split;
using ::std::ranges::views::_Split;
using ::std::ranges::views::split;
using ::std::ranges::views::_Counted;
using ::std::ranges::views::counted;
using ::std::ranges::views::_Common;
using ::std::ranges::views::common;
using ::std::ranges::views::_Reverse;
using ::std::ranges::views::reverse;
using ::std::ranges::views::_Elements;
using ::std::ranges::views::elements;
using ::std::ranges::views::keys;
using ::std::ranges::views::values;
using ::std::ranges::views::_Zip;
using ::std::ranges::views::zip;
using ::std::ranges::views::_ZipTransform;
using ::std::ranges::views::zip_transform;
using ::std::ranges::views::_Adjacent;
using ::std::ranges::views::adjacent;
using ::std::ranges::views::pairwise;
using ::std::ranges::views::_AdjacentTransform;
using ::std::ranges::views::adjacent_transform;
using ::std::ranges::views::pairwise_transform;
using ::std::ranges::views::_Chunk;
using ::std::ranges::views::chunk;
using ::std::ranges::views::_Slide;
using ::std::ranges::views::slide;
using ::std::ranges::views::_ChunkBy;
using ::std::ranges::views::chunk_by;
using ::std::ranges::views::_JoinWith;
using ::std::ranges::views::join_with;
using ::std::ranges::views::_Repeat;
using ::std::ranges::views::repeat;
using ::std::ranges::views::_Stride;
using ::std::ranges::views::stride;
using ::std::ranges::views::_CartesianProduct;
using ::std::ranges::views::cartesian_product;
using ::std::ranges::views::_AsRvalue;
using ::std::ranges::views::as_rvalue;
using ::std::ranges::views::_Enumerate;
using ::std::ranges::views::enumerate;
using ::std::ranges::views::_AsConst;
using ::std::ranges::views::as_const;
} // namespace views
using ::std::ranges::subrange_kind;
using ::std::ranges::subrange;
using ::std::ranges::get;
using ::std::ranges::borrowed_subrange_t;
using ::std::ranges::__find_fn;
using ::std::ranges::find;
using ::std::ranges::__find_if_fn;
using ::std::ranges::find_if;
using ::std::ranges::__find_if_not_fn;
using ::std::ranges::find_if_not;
using ::std::ranges::in_in_result;
using ::std::ranges::mismatch_result;
using ::std::ranges::__mismatch_fn;
using ::std::ranges::mismatch;
using ::std::ranges::__search_fn;
using ::std::ranges::search;
using ::std::ranges::__min_fn;
using ::std::ranges::min;
using ::std::ranges::__adjacent_find_fn;
using ::std::ranges::adjacent_find;
using ::std::ranges::__equal_fn;
using ::std::ranges::equal;
using ::std::ranges::in_out_result;
using ::std::ranges::copy_result;
using ::std::ranges::move_result;
using ::std::ranges::move_backward_result;
using ::std::ranges::copy_backward_result;
using ::std::ranges::__copy_or_move_backward;
using ::std::ranges::__copy_or_move;
using ::std::ranges::__copy_fn;
using ::std::ranges::copy;
using ::std::ranges::__move_fn;
using ::std::ranges::move;
using ::std::ranges::__copy_backward_fn;
using ::std::ranges::copy_backward;
using ::std::ranges::__move_backward_fn;
using ::std::ranges::move_backward;
using ::std::ranges::copy_n_result;
using ::std::ranges::__copy_n_fn;
using ::std::ranges::copy_n;
using ::std::ranges::__fill_n_fn;
using ::std::ranges::fill_n;
using ::std::ranges::__fill_fn;
using ::std::ranges::fill;
using ::std::ranges::__destroy_fn;
using ::std::ranges::destroy;
using ::std::ranges::__uninitialized_default_construct_fn;
using ::std::ranges::uninitialized_default_construct;
using ::std::ranges::__uninitialized_default_construct_n_fn;
using ::std::ranges::uninitialized_default_construct_n;
using ::std::ranges::__uninitialized_value_construct_fn;
using ::std::ranges::uninitialized_value_construct;
using ::std::ranges::__uninitialized_value_construct_n_fn;
using ::std::ranges::uninitialized_value_construct_n;
using ::std::ranges::uninitialized_copy_result;
using ::std::ranges::__uninitialized_copy_fn;
using ::std::ranges::uninitialized_copy;
using ::std::ranges::uninitialized_copy_n_result;
using ::std::ranges::__uninitialized_copy_n_fn;
using ::std::ranges::uninitialized_copy_n;
using ::std::ranges::uninitialized_move_result;
using ::std::ranges::__uninitialized_move_fn;
using ::std::ranges::uninitialized_move;
using ::std::ranges::uninitialized_move_n_result;
using ::std::ranges::__uninitialized_move_n_fn;
using ::std::ranges::uninitialized_move_n;
using ::std::ranges::__uninitialized_fill_fn;
using ::std::ranges::uninitialized_fill;
using ::std::ranges::__uninitialized_fill_n_fn;
using ::std::ranges::uninitialized_fill_n;
using ::std::ranges::__construct_at_fn;
using ::std::ranges::construct_at;
using ::std::ranges::__destroy_at_fn;
using ::std::ranges::destroy_at;
using ::std::ranges::__destroy_n_fn;
using ::std::ranges::destroy_n;
using ::std::ranges::empty_view;
using ::std::ranges::single_view;
using ::std::ranges::iota_view;
using ::std::ranges::basic_istream_view;
using ::std::ranges::istream_view;
using ::std::ranges::wistream_view;
using ::std::ranges::__maybe_const_t;
using ::std::ranges::range_adaptor_closure;
using ::std::ranges::ref_view;
using ::std::ranges::owning_view;
using ::std::ranges::filter_view;
using ::std::ranges::transform_view;
using ::std::ranges::take_view;
using ::std::ranges::take_while_view;
using ::std::ranges::drop_view;
using ::std::ranges::drop_while_view;
using ::std::ranges::join_view;
using ::std::ranges::lazy_split_view;
using ::std::ranges::split_view;
using ::std::ranges::common_view;
using ::std::ranges::reverse_view;
using ::std::ranges::elements_view;
using ::std::ranges::keys_view;
using ::std::ranges::values_view;
using ::std::ranges::zip_view;
using ::std::ranges::zip_transform_view;
using ::std::ranges::adjacent_view;
using ::std::ranges::adjacent_transform_view;
using ::std::ranges::chunk_view;
using ::std::ranges::slide_view;
using ::std::ranges::chunk_by_view;
using ::std::ranges::join_with_view;
using ::std::ranges::repeat_view;
using ::std::ranges::stride_view;
using ::std::ranges::cartesian_product_view;
using ::std::ranges::as_rvalue_view;
using ::std::ranges::enumerate_view;
using ::std::ranges::as_const_view;
using ::std::ranges::__all_of_fn;
using ::std::ranges::all_of;
using ::std::ranges::__any_of_fn;
using ::std::ranges::any_of;
using ::std::ranges::__none_of_fn;
using ::std::ranges::none_of;
using ::std::ranges::in_fun_result;
using ::std::ranges::for_each_result;
using ::std::ranges::__for_each_fn;
using ::std::ranges::for_each;
using ::std::ranges::for_each_n_result;
using ::std::ranges::__for_each_n_fn;
using ::std::ranges::for_each_n;
using ::std::ranges::__find_first_of_fn;
using ::std::ranges::find_first_of;
using ::std::ranges::__count_fn;
using ::std::ranges::count;
using ::std::ranges::__count_if_fn;
using ::std::ranges::count_if;
using ::std::ranges::__search_n_fn;
using ::std::ranges::search_n;
using ::std::ranges::__find_end_fn;
using ::std::ranges::find_end;
using ::std::ranges::__is_permutation_fn;
using ::std::ranges::is_permutation;
using ::std::ranges::copy_if_result;
using ::std::ranges::__copy_if_fn;
using ::std::ranges::copy_if;
using ::std::ranges::swap_ranges_result;
using ::std::ranges::__swap_ranges_fn;
using ::std::ranges::swap_ranges;
using ::std::ranges::unary_transform_result;
using ::std::ranges::in_in_out_result;
using ::std::ranges::binary_transform_result;
using ::std::ranges::__transform_fn;
using ::std::ranges::transform;
using ::std::ranges::__replace_fn;
using ::std::ranges::replace;
using ::std::ranges::__replace_if_fn;
using ::std::ranges::replace_if;
using ::std::ranges::replace_copy_result;
using ::std::ranges::__replace_copy_fn;
using ::std::ranges::replace_copy;
using ::std::ranges::replace_copy_if_result;
using ::std::ranges::__replace_copy_if_fn;
using ::std::ranges::replace_copy_if;
using ::std::ranges::__generate_n_fn;
using ::std::ranges::generate_n;
using ::std::ranges::__generate_fn;
using ::std::ranges::generate;
using ::std::ranges::__remove_if_fn;
using ::std::ranges::remove_if;
using ::std::ranges::__remove_fn;
using ::std::ranges::remove;
using ::std::ranges::remove_copy_if_result;
using ::std::ranges::__remove_copy_if_fn;
using ::std::ranges::remove_copy_if;
using ::std::ranges::remove_copy_result;
using ::std::ranges::__remove_copy_fn;
using ::std::ranges::remove_copy;
using ::std::ranges::__unique_fn;
using ::std::ranges::unique;
using ::std::ranges::unique_copy_result;
using ::std::ranges::__unique_copy_fn;
using ::std::ranges::unique_copy;
using ::std::ranges::__reverse_fn;
using ::std::ranges::reverse;
using ::std::ranges::reverse_copy_result;
using ::std::ranges::__reverse_copy_fn;
using ::std::ranges::reverse_copy;
using ::std::ranges::__rotate_fn;
using ::std::ranges::rotate;
using ::std::ranges::rotate_copy_result;
using ::std::ranges::__rotate_copy_fn;
using ::std::ranges::rotate_copy;
using ::std::ranges::__sample_fn;
using ::std::ranges::sample;
using ::std::ranges::__shuffle_fn;
using ::std::ranges::shuffle;
using ::std::ranges::__push_heap_fn;
using ::std::ranges::push_heap;
using ::std::ranges::__pop_heap_fn;
using ::std::ranges::pop_heap;
using ::std::ranges::__make_heap_fn;
using ::std::ranges::make_heap;
using ::std::ranges::__sort_heap_fn;
using ::std::ranges::sort_heap;
using ::std::ranges::__is_heap_until_fn;
using ::std::ranges::is_heap_until;
using ::std::ranges::__is_heap_fn;
using ::std::ranges::is_heap;
using ::std::ranges::__sort_fn;
using ::std::ranges::sort;
using ::std::ranges::__stable_sort_fn;
using ::std::ranges::stable_sort;
using ::std::ranges::__partial_sort_fn;
using ::std::ranges::partial_sort;
using ::std::ranges::partial_sort_copy_result;
using ::std::ranges::__partial_sort_copy_fn;
using ::std::ranges::partial_sort_copy;
using ::std::ranges::__is_sorted_until_fn;
using ::std::ranges::is_sorted_until;
using ::std::ranges::__is_sorted_fn;
using ::std::ranges::is_sorted;
using ::std::ranges::__nth_element_fn;
using ::std::ranges::nth_element;
using ::std::ranges::__lower_bound_fn;
using ::std::ranges::lower_bound;
using ::std::ranges::__upper_bound_fn;
using ::std::ranges::upper_bound;
using ::std::ranges::__equal_range_fn;
using ::std::ranges::equal_range;
using ::std::ranges::__binary_search_fn;
using ::std::ranges::binary_search;
using ::std::ranges::__is_partitioned_fn;
using ::std::ranges::is_partitioned;
using ::std::ranges::__partition_fn;
using ::std::ranges::partition;
using ::std::ranges::__stable_partition_fn;
using ::std::ranges::stable_partition;
using ::std::ranges::in_out_out_result;
using ::std::ranges::partition_copy_result;
using ::std::ranges::__partition_copy_fn;
using ::std::ranges::partition_copy;
using ::std::ranges::__partition_point_fn;
using ::std::ranges::partition_point;
using ::std::ranges::merge_result;
using ::std::ranges::__merge_fn;
using ::std::ranges::merge;
using ::std::ranges::__inplace_merge_fn;
using ::std::ranges::inplace_merge;
using ::std::ranges::__includes_fn;
using ::std::ranges::includes;
using ::std::ranges::set_union_result;
using ::std::ranges::__set_union_fn;
using ::std::ranges::set_union;
using ::std::ranges::set_intersection_result;
using ::std::ranges::__set_intersection_fn;
using ::std::ranges::set_intersection;
using ::std::ranges::set_difference_result;
using ::std::ranges::__set_difference_fn;
using ::std::ranges::set_difference;
using ::std::ranges::set_symmetric_difference_result;
using ::std::ranges::__set_symmetric_difference_fn;
using ::std::ranges::set_symmetric_difference;
using ::std::ranges::__max_fn;
using ::std::ranges::max;
using ::std::ranges::__clamp_fn;
using ::std::ranges::clamp;
using ::std::ranges::min_max_result;
using ::std::ranges::minmax_result;
using ::std::ranges::__minmax_fn;
using ::std::ranges::minmax;
using ::std::ranges::__min_element_fn;
using ::std::ranges::min_element;
using ::std::ranges::__max_element_fn;
using ::std::ranges::max_element;
using ::std::ranges::minmax_element_result;
using ::std::ranges::__minmax_element_fn;
using ::std::ranges::minmax_element;
using ::std::ranges::__lexicographical_compare_fn;
using ::std::ranges::lexicographical_compare;
using ::std::ranges::in_found_result;
using ::std::ranges::next_permutation_result;
using ::std::ranges::__next_permutation_fn;
using ::std::ranges::next_permutation;
using ::std::ranges::prev_permutation_result;
using ::std::ranges::__prev_permutation_fn;
using ::std::ranges::prev_permutation;
using ::std::ranges::__contains_fn;
using ::std::ranges::contains;
using ::std::ranges::__contains_subrange_fn;
using ::std::ranges::contains_subrange;
using ::std::ranges::out_value_result;
using ::std::ranges::iota_result;
using ::std::ranges::__iota_fn;
using ::std::ranges::iota;
using ::std::ranges::__find_last_fn;
using ::std::ranges::find_last;
using ::std::ranges::__find_last_if_fn;
using ::std::ranges::find_last_if;
using ::std::ranges::__find_last_if_not_fn;
using ::std::ranges::find_last_if_not;
using ::std::ranges::in_value_result;
using ::std::ranges::fold_left_with_iter_result;
using ::std::ranges::__fold_left_with_iter_fn;
using ::std::ranges::fold_left_with_iter;
using ::std::ranges::__fold_left_fn;
using ::std::ranges::fold_left;
using ::std::ranges::fold_left_first_with_iter_result;
using ::std::ranges::__fold_left_first_with_iter_fn;
using ::std::ranges::fold_left_first_with_iter;
using ::std::ranges::__fold_left_first_fn;
using ::std::ranges::fold_left_first;
using ::std::ranges::__fold_right_fn;
using ::std::ranges::fold_right;
using ::std::ranges::__fold_right_last_fn;
using ::std::ranges::fold_right_last;
} // namespace ranges
using ::std::swappable;
using ::std::swappable_with;
using ::std::movable;
using ::std::copyable;
using ::std::semiregular;
using ::std::equality_comparable;
using ::std::equality_comparable_with;
using ::std::totally_ordered;
using ::std::totally_ordered_with;
using ::std::regular;
using ::std::invocable;
using ::std::regular_invocable;
using ::std::predicate;
using ::std::relation;
using ::std::equivalence_relation;
using ::std::strict_weak_order;
namespace __cmp_cat {
using ::std::__cmp_cat::type;
using ::std::__cmp_cat::_Ord;
using ::std::__cmp_cat::_Ncmp;
using ::std::__cmp_cat::__unspec;
} // namespace __cmp_cat
using ::std::partial_ordering;
using ::std::weak_ordering;
using ::std::strong_ordering;
using ::std::is_eq;
using ::std::is_neq;
using ::std::is_lt;
using ::std::is_lteq;
using ::std::is_gt;
using ::std::is_gteq;
using ::std::common_comparison_category;
using ::std::common_comparison_category_t;
using ::std::three_way_comparable;
using ::std::three_way_comparable_with;
using ::std::compare_three_way_result;
using ::std::compare_three_way_result_t;
using ::std::compare_three_way;
namespace __cmp_cust {
using ::std::__cmp_cust::__fp_weak_ordering;
using ::std::__cmp_cust::__adl_strong;
using ::std::__cmp_cust::__adl_weak;
using ::std::__cmp_cust::__adl_partial;
using ::std::__cmp_cust::__cmp3way;
using ::std::__cmp_cust::__strongly_ordered;
using ::std::__cmp_cust::__decayed_same_as;
using ::std::__cmp_cust::_Strong_order;
using ::std::__cmp_cust::__weakly_ordered;
using ::std::__cmp_cust::_Weak_order;
using ::std::__cmp_cust::__partially_ordered;
using ::std::__cmp_cust::_Partial_order;
using ::std::__cmp_cust::__op_eq_lt;
using ::std::__cmp_cust::_Strong_fallback;
using ::std::__cmp_cust::_Weak_fallback;
using ::std::__cmp_cust::__op_eq_lt_lt;
using ::std::__cmp_cust::_Partial_fallback;
} // namespace __cmp_cust
inline namespace __cmp_alg {
using ::std::__cmp_alg::strong_order;
using ::std::__cmp_alg::weak_order;
using ::std::__cmp_alg::partial_order;
using ::std::__cmp_alg::compare_strong_order_fallback;
using ::std::__cmp_alg::compare_weak_order_fallback;
using ::std::__cmp_alg::compare_partial_order_fallback;
} // namespace __cmp_alg
using ::std::initializer_list;
using ::std::begin;
using ::std::end;
using ::std::exception;
using ::std::_Hash_bytes;
using ::std::_Fnv_hash_bytes;
using ::std::type_info;
using ::std::bad_cast;
using ::std::bad_typeid;
using ::std::bad_alloc;
using ::std::bad_array_new_length;
using ::std::align_val_t;
using ::std::nothrow_t;
using ::std::nothrow;
using ::std::new_handler;
using ::std::set_new_handler;
using ::std::get_new_handler;
using ::std::launder;
using ::std::destroying_delete_t;
using ::std::destroying_delete;
using ::std::__addressof;
using ::std::forward;
using ::std::move;
using ::std::__move_if_noexcept_cond;
using ::std::move_if_noexcept;
using ::std::addressof;
using ::std::__exchange;
using ::std::tuple_size;
using ::std::__enable_if_has_tuple_size;
using ::std::tuple_size_v;
using ::std::tuple_element;
using ::std::__tuple_element_t;
using ::std::__find_uniq_type_in_pack;
using ::std::tuple_element_t;
using ::std::_Index_tuple;
using ::std::_Build_index_tuple;
using ::std::integer_sequence;
using ::std::make_integer_sequence;
using ::std::index_sequence;
using ::std::make_index_sequence;
using ::std::index_sequence_for;
using ::std::in_place_t;
using ::std::in_place;
using ::std::in_place_type_t;
using ::std::in_place_type;
using ::std::in_place_index_t;
using ::std::in_place_index;
using ::std::__is_in_place_type_v;
using ::std::__is_in_place_type;
using ::std::_Nth_type;
using ::std::bad_any_cast;
using ::std::__throw_bad_any_cast;
using ::std::any;
using ::std::make_any;
using ::std::any_cast;
using ::std::__any_caster;
using ::std::__throw_bad_exception;
using ::std::__throw_bad_alloc;
using ::std::__throw_bad_array_new_length;
using ::std::__throw_bad_cast;
using ::std::__throw_bad_typeid;
using ::std::__throw_logic_error;
using ::std::__throw_domain_error;
using ::std::__throw_invalid_argument;
using ::std::__throw_length_error;
using ::std::__throw_out_of_range;
using ::std::__throw_out_of_range_fmt;
using ::std::__throw_runtime_error;
using ::std::__throw_range_error;
using ::std::__throw_overflow_error;
using ::std::__throw_underflow_error;
using ::std::__throw_ios_failure;
using ::std::__throw_system_error;
using ::std::__throw_future_error;
using ::std::__throw_bad_function_call;
using ::std::__true_type;
using ::std::__false_type;
using ::std::__truth_type;
using ::std::__traitor;
using ::std::__are_same;
using ::std::__is_void;
using ::std::__is_integer;
using ::std::__is_floating;
using ::std::__is_pointer;
using ::std::__is_arithmetic;
using ::std::__is_scalar;
using ::std::__is_char;
using ::std::__is_byte;
using ::std::iterator_traits;
using ::std::__is_nonvolatile_trivially_copyable;
using ::std::__memcpyable;
using ::std::__memcmpable;
using ::std::__is_memcmp_ordered;
using ::std::__is_memcmp_ordered_with;
using ::std::__is_move_iterator;
using ::std::__miter_base;
using ::std::piecewise_construct_t;
using ::std::piecewise_construct;
using ::std::tuple;
using ::std::__pair_base;
using ::std::pair;
using ::std::operator==;
using ::std::operator<=>;
using ::std::make_pair;
using ::std::__is_pair;
using ::std::__pair_get;
using ::std::get;
using ::std::__undefined;
using ::std::__get_first_arg;
using ::std::__replace_first_arg;
using ::std::__ptr_traits_elem;
using ::std::__ptr_traits_elem_t;
using ::std::__ptr_traits_ptr_to;
using ::std::__ptr_traits_impl;
using ::std::pointer_traits;
using ::std::__ptr_rebind;
using ::std::__to_address;
using ::std::to_address;
using ::std::__is_transparent;
using ::std::identity;
using ::std::default_sentinel_t;
using ::std::default_sentinel;
using ::std::input_iterator_tag;
using ::std::output_iterator_tag;
using ::std::forward_iterator_tag;
using ::std::bidirectional_iterator_tag;
using ::std::random_access_iterator_tag;
using ::std::contiguous_iterator_tag;
using ::std::__iterator_traits;
using ::std::iter_reference_t;
using ::std::iter_rvalue_reference_t;
using ::std::incrementable_traits;
using ::std::iter_difference_t;
using ::std::indirectly_readable_traits;
using ::std::iter_value_t;
using ::std::indirectly_readable;
using ::std::iter_common_reference_t;
using ::std::indirectly_writable;
using ::std::weakly_incrementable;
using ::std::incrementable;
using ::std::input_or_output_iterator;
using ::std::sentinel_for;
using ::std::disable_sized_sentinel_for;
using ::std::sized_sentinel_for;
using ::std::input_iterator;
using ::std::output_iterator;
using ::std::forward_iterator;
using ::std::bidirectional_iterator;
using ::std::random_access_iterator;
using ::std::contiguous_iterator;
using ::std::indirectly_unary_invocable;
using ::std::indirectly_regular_unary_invocable;
using ::std::indirect_unary_predicate;
using ::std::indirect_binary_predicate;
using ::std::indirect_equivalence_relation;
using ::std::indirect_strict_weak_order;
using ::std::indirect_result_t;
using ::std::projected;
using ::std::indirectly_movable;
using ::std::indirectly_movable_storable;
using ::std::indirectly_copyable;
using ::std::indirectly_copyable_storable;
using ::std::indirectly_swappable;
using ::std::indirectly_comparable;
using ::std::permutable;
using ::std::mergeable;
using ::std::sortable;
using ::std::unreachable_sentinel_t;
using ::std::unreachable_sentinel;
using ::std::iterator;
using ::std::__iterator_category;
using ::std::__iter_category_t;
using ::std::_RequireInputIter;
using ::std::__is_random_access_iter;
using ::std::_List_iterator;
using ::std::_List_const_iterator;
using ::std::__distance;
using ::std::distance;
using ::std::__advance;
using ::std::advance;
using ::std::next;
using ::std::prev;
using ::std::destroy_at;
using ::std::construct_at;
using ::std::_Construct;
using ::std::_Construct_novalue;
using ::std::_Destroy;
using ::std::_Destroy_aux;
using ::std::_Destroy_n_aux;
using ::std::_Destroy_n;
using ::std::destroy;
using ::std::destroy_n;
using ::std::reverse_iterator;
using ::std::operator!=;
using ::std::operator<;
using ::std::operator>;
using ::std::operator<=;
using ::std::operator>=;
using ::std::operator-;
using ::std::operator+;
using ::std::__make_reverse_iterator;
using ::std::make_reverse_iterator;
using ::std::__niter_base;
using ::std::back_insert_iterator;
using ::std::back_inserter;
using ::std::front_insert_iterator;
using ::std::front_inserter;
using ::std::insert_iterator;
using ::std::inserter;
using ::std::move_sentinel;
using ::std::move_iterator;
using ::std::make_move_iterator;
using ::std::__make_move_if_noexcept_iterator;
using ::std::common_iterator;
using ::std::counted_iterator;
using ::std::iter_const_reference_t;
using ::std::basic_const_iterator;
using ::std::const_iterator;
using ::std::const_sentinel;
using ::std::make_const_iterator;
using ::std::make_const_sentinel;
using ::std::__iter_key_t;
using ::std::__iter_val_t;
using ::std::__iter_to_alloc_t;
using ::std::bit_cast;
using ::std::byteswap;
using ::std::__rotl;
using ::std::__rotr;
using ::std::__countl_zero;
using ::std::__countl_one;
using ::std::__countr_zero;
using ::std::__countr_one;
using ::std::__popcount;
using ::std::__has_single_bit;
using ::std::__bit_ceil;
using ::std::__bit_floor;
using ::std::__bit_width;
using ::std::_If_is_unsigned_integer;
using ::std::rotl;
using ::std::rotr;
using ::std::countl_zero;
using ::std::countl_one;
using ::std::countr_zero;
using ::std::countr_one;
using ::std::popcount;
using ::std::has_single_bit;
using ::std::bit_ceil;
using ::std::bit_floor;
using ::std::bit_width;
using ::std::endian;
using ::std::__memcmp;
using ::std::iter_swap;
using ::std::swap_ranges;
using ::std::min;
using ::std::max;
using ::std::__niter_wrap;
using ::std::__copy_move;
using ::std::_Deque_iterator;
using ::std::_Bit_iterator;
using ::std::char_traits;
using ::std::istreambuf_iterator;
using ::std::ostreambuf_iterator;
using ::std::__copy_move_a2;
using ::std::__copy_move_a1;
using ::std::__copy_move_a;
using ::std::__copy_n_a;
using ::std::copy;
using ::std::__copy_move_backward;
using ::std::__copy_move_backward_a2;
using ::std::__copy_move_backward_a1;
using ::std::__copy_move_backward_a;
using ::std::copy_backward;
using ::std::move_backward;
using ::std::__fill_a1;
using ::std::__fill_a;
using ::std::fill;
using ::std::__size_to_integer;
using ::std::__fill_n_a1;
using ::std::__fill_n_a;
using ::std::fill_n;
using ::std::__equal;
using ::std::__equal_aux1;
using ::std::__equal_aux;
using ::std::__lc_rai;
using ::std::__lexicographical_compare_impl;
using ::std::__lexicographical_compare;
using ::std::__lexicographical_compare_aux1;
using ::std::__lexicographical_compare_aux;
using ::std::__lower_bound;
using ::std::lower_bound;
using ::std::__lg;
using ::std::equal;
using ::std::__equal4;
using ::std::lexicographical_compare;
using ::std::__is_byte_iter;
using ::std::__min_cmp;
using ::std::lexicographical_compare_three_way;
using ::std::__mismatch;
using ::std::mismatch;
using ::std::__find_if;
using ::std::__count_if;
using ::std::__remove_if;
using ::std::__is_permutation;
using ::std::is_permutation;
using ::std::allocator;
using ::std::uses_allocator;
using ::std::allocator_traits;
inline namespace __cxx11 {
using ::std::__cxx11::basic_string;
using ::std::__cxx11::basic_stringbuf;
using ::std::__cxx11::basic_istringstream;
using ::std::__cxx11::basic_ostringstream;
using ::std::__cxx11::basic_stringstream;
using ::std::__cxx11::numpunct;
using ::std::__cxx11::numpunct_byname;
using ::std::__cxx11::collate;
using ::std::__cxx11::collate_byname;
using ::std::__cxx11::time_get;
using ::std::__cxx11::time_get_byname;
using ::std::__cxx11::money_get;
using ::std::__cxx11::money_put;
using ::std::__cxx11::moneypunct;
using ::std::__cxx11::moneypunct_byname;
using ::std::__cxx11::messages;
using ::std::__cxx11::messages_byname;
using ::std::__cxx11::stoi;
using ::std::__cxx11::stol;
using ::std::__cxx11::stoul;
using ::std::__cxx11::stoll;
using ::std::__cxx11::stoull;
using ::std::__cxx11::stof;
using ::std::__cxx11::stod;
using ::std::__cxx11::stold;
using ::std::__cxx11::to_string;
using ::std::__cxx11::to_wstring;
using ::std::__cxx11::swap;
using ::std::__cxx11::wstring_convert;
using ::std::__cxx11::_List_base;
using ::std::__cxx11::list;
using ::std::__cxx11::regex_traits;
using ::std::__cxx11::basic_regex;
using ::std::__cxx11::match_results;
using ::std::__cxx11::regex;
using ::std::__cxx11::wregex;
using ::std::__cxx11::sub_match;
using ::std::__cxx11::csub_match;
using ::std::__cxx11::ssub_match;
using ::std::__cxx11::wcsub_match;
using ::std::__cxx11::wssub_match;
using ::std::__cxx11::operator==;
using ::std::__cxx11::operator<=>;
using ::std::__cxx11::__sub_match_string;
using ::std::__cxx11::operator<<;
using ::std::__cxx11::cmatch;
using ::std::__cxx11::smatch;
using ::std::__cxx11::wcmatch;
using ::std::__cxx11::wsmatch;
using ::std::__cxx11::regex_iterator;
using ::std::__cxx11::cregex_iterator;
using ::std::__cxx11::sregex_iterator;
using ::std::__cxx11::wcregex_iterator;
using ::std::__cxx11::wsregex_iterator;
using ::std::__cxx11::regex_token_iterator;
using ::std::__cxx11::cregex_token_iterator;
using ::std::__cxx11::sregex_token_iterator;
using ::std::__cxx11::wcregex_token_iterator;
using ::std::__cxx11::wsregex_token_iterator;
} // namespace __cxx11
using ::std::string;
using ::std::wstring;
using ::std::u8string;
using ::std::u16string;
using ::std::u32string;
using ::std::mbstate_t;
using ::std::wint_t;
using ::std::btowc;
using ::std::fgetwc;
using ::std::fgetws;
using ::std::fputwc;
using ::std::fputws;
using ::std::fwide;
using ::std::fwprintf;
using ::std::fwscanf;
using ::std::getwc;
using ::std::getwchar;
using ::std::mbrlen;
using ::std::mbrtowc;
using ::std::mbsinit;
using ::std::mbsrtowcs;
using ::std::putwc;
using ::std::putwchar;
using ::std::swprintf;
using ::std::swscanf;
using ::std::ungetwc;
using ::std::vfwprintf;
using ::std::vfwscanf;
using ::std::vswprintf;
using ::std::vswscanf;
using ::std::vwprintf;
using ::std::vwscanf;
using ::std::wcrtomb;
using ::std::wcscat;
using ::std::wcscmp;
using ::std::wcscoll;
using ::std::wcscpy;
using ::std::wcscspn;
using ::std::wcsftime;
using ::std::wcslen;
using ::std::wcsncat;
using ::std::wcsncmp;
using ::std::wcsncpy;
using ::std::wcsrtombs;
using ::std::wcsspn;
using ::std::wcstod;
using ::std::wcstof;
using ::std::wcstok;
using ::std::wcstol;
using ::std::wcstoul;
using ::std::wcsxfrm;
using ::std::wctob;
using ::std::wmemcmp;
using ::std::wmemcpy;
using ::std::wmemmove;
using ::std::wmemset;
using ::std::wprintf;
using ::std::wscanf;
using ::std::wcschr;
using ::std::wcspbrk;
using ::std::wcsrchr;
using ::std::wcsstr;
using ::std::wmemchr;
using ::std::wcstold;
using ::std::wcstoll;
using ::std::wcstoull;
using ::std::streamoff;
using ::std::streamsize;
using ::std::fpos;
using ::std::streampos;
using ::std::wstreampos;
using ::std::u8streampos;
using ::std::u16streampos;
using ::std::u32streampos;
using ::std::__new_allocator;
using ::std::__allocator_base;
using ::std::lconv;
using ::std::setlocale;
using ::std::localeconv;
using ::std::__c_locale;
using ::std::__convert_from_v;
using ::std::ios_base;
using ::std::basic_ios;
using ::std::basic_streambuf;
using ::std::basic_istream;
using ::std::basic_ostream;
using ::std::basic_iostream;
using ::std::basic_filebuf;
using ::std::basic_ifstream;
using ::std::basic_ofstream;
using ::std::basic_fstream;
using ::std::ios;
using ::std::streambuf;
using ::std::istream;
using ::std::ostream;
using ::std::iostream;
using ::std::stringbuf;
using ::std::istringstream;
using ::std::ostringstream;
using ::std::stringstream;
using ::std::filebuf;
using ::std::ifstream;
using ::std::ofstream;
using ::std::fstream;
using ::std::wios;
using ::std::wstreambuf;
using ::std::wistream;
using ::std::wostream;
using ::std::wiostream;
using ::std::wstringbuf;
using ::std::wistringstream;
using ::std::wostringstream;
using ::std::wstringstream;
using ::std::wfilebuf;
using ::std::wifstream;
using ::std::wofstream;
using ::std::wfstream;
using ::std::basic_syncbuf;
using ::std::basic_osyncstream;
using ::std::syncbuf;
using ::std::osyncstream;
using ::std::wsyncbuf;
using ::std::wosyncstream;
using ::std::basic_spanbuf;
using ::std::basic_ispanstream;
using ::std::basic_ospanstream;
using ::std::basic_spanstream;
using ::std::spanbuf;
using ::std::ispanstream;
using ::std::ospanstream;
using ::std::spanstream;
using ::std::wspanbuf;
using ::std::wispanstream;
using ::std::wospanstream;
using ::std::wspanstream;
using ::std::isalnum;
using ::std::isalpha;
using ::std::iscntrl;
using ::std::isdigit;
using ::std::isgraph;
using ::std::islower;
using ::std::isprint;
using ::std::ispunct;
using ::std::isspace;
using ::std::isupper;
using ::std::isxdigit;
using ::std::tolower;
using ::std::toupper;
using ::std::isblank;
using ::std::locale;
using ::std::has_facet;
using ::std::use_facet;
using ::std::ctype_base;
using ::std::ctype;
using ::std::ctype_byname;
using ::std::codecvt_base;
using ::std::codecvt;
using ::std::codecvt_byname;
using ::std::num_get;
using ::std::num_put;
using ::std::time_base;
using ::std::time_put;
using ::std::time_put_byname;
using ::std::money_base;
using ::std::messages_base;
using ::std::__ostream_write;
using ::std::__ostream_fill;
using ::std::__ostream_insert;
using ::std::unary_function;
using ::std::binary_function;
using ::std::plus;
using ::std::minus;
using ::std::multiplies;
using ::std::divides;
using ::std::modulus;
using ::std::negate;
using ::std::equal_to;
using ::std::not_equal_to;
using ::std::greater;
using ::std::less;
using ::std::greater_equal;
using ::std::less_equal;
using ::std::logical_and;
using ::std::logical_or;
using ::std::logical_not;
using ::std::bit_and;
using ::std::bit_or;
using ::std::bit_xor;
using ::std::bit_not;
using ::std::unary_negate;
using ::std::not1;
using ::std::binary_negate;
using ::std::not2;
using ::std::pointer_to_unary_function;
using ::std::ptr_fun;
using ::std::pointer_to_binary_function;
using ::std::_Identity;
using ::std::_Select1st;
using ::std::_Select2nd;
using ::std::mem_fun_t;
using ::std::const_mem_fun_t;
using ::std::mem_fun_ref_t;
using ::std::const_mem_fun_ref_t;
using ::std::mem_fun1_t;
using ::std::const_mem_fun1_t;
using ::std::mem_fun1_ref_t;
using ::std::const_mem_fun1_ref_t;
using ::std::mem_fun;
using ::std::mem_fun_ref;
using ::std::__has_is_transparent;
using ::std::__has_is_transparent_t;
using ::std::binder1st;
using ::std::bind1st;
using ::std::binder2nd;
using ::std::bind2nd;
using ::std::__invfwd;
using ::std::__invoke_impl;
using ::std::__invoke;
using ::std::__invoke_r;
using ::std::_Maybe_unary_or_binary_function;
using ::std::_Mem_fn_traits;
using ::std::_Mem_fn_traits_base;
using ::std::_Maybe_get_result_type;
using ::std::_Weak_result_type_impl;
using ::std::_Weak_result_type_memfun;
using ::std::_Weak_result_type;
using ::std::ref;
using ::std::cref;
using ::std::valarray;
using ::std::cbegin;
using ::std::cend;
using ::std::rbegin;
using ::std::rend;
using ::std::crbegin;
using ::std::crend;
using ::std::size;
using ::std::empty;
using ::std::data;
using ::std::ssize;
using ::std::__allocator_traits_base;
using ::std::__alloc_rebind;
using ::std::__alloc_on_copy;
using ::std::__alloc_on_move;
using ::std::__alloc_on_swap;
using ::std::__is_alloc_insertable_impl;
using ::std::__is_copy_insertable;
using ::std::__is_move_insertable;
using ::std::__is_allocator;
using ::std::_RequireAllocator;
using ::std::_RequireNotAllocator;
using ::std::__allocator_like;
using ::std::__alloc_swap;
using ::std::__shrink_to_fit_aux;
using ::std::__hash_base;
using ::std::hash;
using ::std::__poison_hash;
using ::std::__hash_enum;
using ::std::_Hash_impl;
using ::std::_Fnv_hash_impl;
using ::std::__is_fast_hash;
namespace numbers {
using ::std::numbers::_Enable_if_floating;
using ::std::numbers::e_v;
using ::std::numbers::log2e_v;
using ::std::numbers::log10e_v;
using ::std::numbers::pi_v;
using ::std::numbers::inv_pi_v;
using ::std::numbers::inv_sqrtpi_v;
using ::std::numbers::ln2_v;
using ::std::numbers::ln10_v;
using ::std::numbers::sqrt2_v;
using ::std::numbers::sqrt3_v;
using ::std::numbers::inv_sqrt3_v;
using ::std::numbers::egamma_v;
using ::std::numbers::phi_v;
using ::std::numbers::e;
using ::std::numbers::log2e;
using ::std::numbers::log10e;
using ::std::numbers::pi;
using ::std::numbers::inv_pi;
using ::std::numbers::inv_sqrtpi;
using ::std::numbers::ln2;
using ::std::numbers::ln10;
using ::std::numbers::sqrt2;
using ::std::numbers::sqrt3;
using ::std::numbers::inv_sqrt3;
using ::std::numbers::egamma;
using ::std::numbers::phi;
} // namespace numbers
using ::std::numeric_limits;
using ::std::__sv_check;
using ::std::__sv_limit;
using ::std::basic_string_view;
using ::std::string_view;
using ::std::wstring_view;
using ::std::u8string_view;
using ::std::u16string_view;
using ::std::u32string_view;
using ::std::__str_concat;
using ::std::getline;
using ::std::abs;
using ::std::div_t;
using ::std::ldiv_t;
using ::std::abort;
using ::std::aligned_alloc;
using ::std::atexit;
using ::std::at_quick_exit;
using ::std::atof;
using ::std::atoi;
using ::std::atol;
using ::std::bsearch;
using ::std::calloc;
using ::std::div;
using ::std::exit;
using ::std::free;
using ::std::getenv;
using ::std::labs;
using ::std::ldiv;
using ::std::malloc;
using ::std::mblen;
using ::std::mbstowcs;
using ::std::mbtowc;
using ::std::qsort;
using ::std::quick_exit;
using ::std::rand;
using ::std::realloc;
using ::std::srand;
using ::std::strtod;
using ::std::strtol;
using ::std::strtoul;
using ::std::system;
using ::std::wcstombs;
using ::std::wctomb;
using ::std::lldiv_t;
using ::std::_Exit;
using ::std::llabs;
using ::std::lldiv;
using ::std::atoll;
using ::std::strtof;
using ::std::strtoll;
using ::std::strtoull;
using ::std::strtold;
using ::std::FILE;
using ::std::fpos_t;
using ::std::clearerr;
using ::std::fclose;
using ::std::feof;
using ::std::ferror;
using ::std::fflush;
using ::std::fgetc;
using ::std::fgetpos;
using ::std::fgets;
using ::std::fopen;
using ::std::fprintf;
using ::std::fputc;
using ::std::fputs;
using ::std::fread;
using ::std::freopen;
using ::std::fscanf;
using ::std::fseek;
using ::std::fsetpos;
using ::std::ftell;
using ::std::fwrite;
using ::std::getc;
using ::std::getchar;
using ::std::perror;
using ::std::printf;
using ::std::putc;
using ::std::putchar;
using ::std::puts;
using ::std::remove;
using ::std::rename;
using ::std::rewind;
using ::std::scanf;
using ::std::setbuf;
using ::std::setvbuf;
using ::std::sprintf;
using ::std::sscanf;
using ::std::tmpfile;
using ::std::tmpnam;
using ::std::ungetc;
using ::std::vfprintf;
using ::std::vprintf;
using ::std::vsprintf;
using ::std::snprintf;
using ::std::vfscanf;
using ::std::vscanf;
using ::std::vsnprintf;
using ::std::vsscanf;
using ::std::__str_hash_base;
using ::std::__erased_type;
using ::std::__is_erased_or_convertible;
using ::std::allocator_arg_t;
using ::std::allocator_arg;
using ::std::__uses_allocator_helper;
using ::std::__uses_alloc_base;
using ::std::__uses_alloc0;
using ::std::__uses_alloc1;
using ::std::__uses_alloc2;
using ::std::__uses_alloc;
using ::std::__uses_alloc_t;
using ::std::__use_alloc;
using ::std::uses_allocator_v;
using ::std::__is_uses_allocator_predicate;
using ::std::__is_uses_allocator_constructible;
using ::std::__is_uses_allocator_constructible_v;
using ::std::__is_nothrow_uses_allocator_constructible;
using ::std::__is_nothrow_uses_allocator_constructible_v;
using ::std::__uses_allocator_construct_impl;
using ::std::__uses_allocator_construct;
using ::std::__is_empty_non_tuple;
using ::std::__empty_not_final;
using ::std::_Head_base;
using ::std::_Tuple_impl;
using ::std::_TupleConstraints;
using ::std::__get_helper;
using ::std::__tuple_compare;
using ::std::__tuple_cmp;
using ::std::make_tuple;
using ::std::forward_as_tuple;
using ::std::array;
using ::std::__make_tuple_impl;
using ::std::__do_make_tuple;
using ::std::__make_tuple;
using ::std::__combine_tuples;
using ::std::__tuple_cat_result;
using ::std::__make_1st_indices;
using ::std::__tuple_concater;
using ::std::tuple_cat;
using ::std::tie;
using ::std::_Swallow_assign;
using ::std::ignore;
using ::std::__unpack_std_tuple;
using ::std::__apply_impl;
using ::std::apply;
using ::std::__make_from_tuple_impl;
using ::std::make_from_tuple;
using ::std::_Std_pair;
using ::std::uses_allocator_construction_args;
using ::std::make_obj_using_allocator;
using ::std::uninitialized_construct_using_allocator;
namespace pmr {
using ::std::pmr::memory_resource;
using ::std::pmr::operator==;
using ::std::pmr::polymorphic_allocator;
using ::std::pmr::basic_string;
using ::std::pmr::string;
using ::std::pmr::u8string;
using ::std::pmr::u16string;
using ::std::pmr::u32string;
using ::std::pmr::wstring;
using ::std::pmr::vector;
using ::std::pmr::unordered_map;
using ::std::pmr::unordered_multimap;
using ::std::pmr::new_delete_resource;
using ::std::pmr::null_memory_resource;
using ::std::pmr::set_default_resource;
using ::std::pmr::get_default_resource;
using ::std::pmr::pool_options;
using ::std::pmr::synchronized_pool_resource;
using ::std::pmr::unsynchronized_pool_resource;
using ::std::pmr::monotonic_buffer_resource;
using ::std::pmr::__pool_resource;
using ::std::pmr::deque;
using ::std::pmr::forward_list;
using ::std::pmr::list;
using ::std::pmr::map;
using ::std::pmr::multimap;
using ::std::pmr::set;
using ::std::pmr::multiset;
using ::std::pmr::unordered_set;
using ::std::pmr::unordered_multiset;
using ::std::pmr::match_results;
using ::std::pmr::cmatch;
using ::std::pmr::smatch;
using ::std::pmr::wcmatch;
using ::std::pmr::wsmatch;
} // namespace pmr
using ::std::erase_if;
using ::std::erase;
using ::std::_Base_bitset;
using ::std::_Sanitize;
using ::std::_Sanitize_val;
namespace __bitset {
using ::std::__bitset::__string;
} // namespace __bitset
using ::std::bitset;
using ::std::__static_sign;
using ::std::__static_abs;
using ::std::__static_gcd;
using ::std::__safe_multiply;
using ::std::__big_less;
using ::std::__big_add;
using ::std::__big_sub;
using ::std::__big_mul;
using ::std::__big_div_impl;
using ::std::__big_div;
using ::std::ratio;
using ::std::__is_ratio;
using ::std::__is_ratio_v;
using ::std::__are_both_ratios;
using ::std::__ratio_multiply;
using ::std::ratio_multiply;
using ::std::__ratio_divide;
using ::std::ratio_divide;
using ::std::ratio_equal;
using ::std::ratio_not_equal;
using ::std::__ratio_less_impl_1;
using ::std::__ratio_less_impl;
using ::std::ratio_less;
using ::std::ratio_less_equal;
using ::std::ratio_greater;
using ::std::ratio_greater_equal;
using ::std::ratio_equal_v;
using ::std::ratio_not_equal_v;
using ::std::ratio_less_v;
using ::std::ratio_less_equal_v;
using ::std::ratio_greater_v;
using ::std::ratio_greater_equal_v;
using ::std::__ratio_add_impl;
using ::std::__ratio_add;
using ::std::ratio_add;
using ::std::__ratio_subtract;
using ::std::ratio_subtract;
using ::std::atto;
using ::std::femto;
using ::std::pico;
using ::std::nano;
using ::std::micro;
using ::std::milli;
using ::std::centi;
using ::std::deci;
using ::std::deca;
using ::std::hecto;
using ::std::kilo;
using ::std::mega;
using ::std::giga;
using ::std::tera;
using ::std::peta;
using ::std::exa;
using ::std::float_round_style;
using ::std::float_denorm_style;
using ::std::__numeric_limits_base;
using ::std::clock_t;
using ::std::time_t;
using ::std::tm;
using ::std::clock;
using ::std::difftime;
using ::std::mktime;
using ::std::time;
using ::std::asctime;
using ::std::ctime;
using ::std::gmtime;
using ::std::localtime;
using ::std::strftime;
using ::std::timespec;
using ::std::timespec_get;
namespace __parse_int {
using ::std::__parse_int::_Digit;
using ::std::__parse_int::_Digit_impl;
using ::std::__parse_int::__ull_constant;
using ::std::__parse_int::_Power_help;
using ::std::__parse_int::_Power;
using ::std::__parse_int::_Number_help;
using ::std::__parse_int::_Number;
using ::std::__parse_int::_Parse_int;
} // namespace __parse_int
namespace __select_int {
using ::std::__select_int::_Select_int_base;
using ::std::__select_int::_Select_int;
} // namespace __select_int
namespace filesystem {
using ::std::filesystem::__file_clock;
using ::std::filesystem::file_status;
inline namespace __cxx11 {
using ::std::filesystem::__cxx11::path;
using ::std::filesystem::__cxx11::filesystem_error;
using ::std::filesystem::__cxx11::directory_entry;
using ::std::filesystem::__cxx11::directory_iterator;
using ::std::filesystem::__cxx11::recursive_directory_iterator;
namespace __detail {
using ::std::filesystem::__cxx11::__detail::__is_encoded_char;
using ::std::filesystem::__cxx11::__detail::__safe_iterator_traits;
using ::std::filesystem::__cxx11::__detail::__is_path_iter_src;
using ::std::filesystem::__cxx11::__detail::__is_path_src;
using ::std::filesystem::__cxx11::__detail::_Path;
using ::std::filesystem::__cxx11::__detail::_Path2;
using ::std::filesystem::__cxx11::__detail::__is_contiguous;
using ::std::filesystem::__cxx11::__detail::__unified_u8_t;
using ::std::filesystem::__cxx11::__detail::__effective_range;
using ::std::filesystem::__cxx11::__detail::__source_value_type_impl;
using ::std::filesystem::__cxx11::__detail::__source_value_t;
using ::std::filesystem::__cxx11::__detail::__value_type_is_char;
using ::std::filesystem::__cxx11::__detail::__value_type_is_char_or_char8_t;
using ::std::filesystem::__cxx11::__detail::__string_from_range;
using ::std::filesystem::__cxx11::__detail::__throw_conversion_error;
} // namespace __detail
using ::std::filesystem::__cxx11::swap;
using ::std::filesystem::__cxx11::hash_value;
using ::std::filesystem::__cxx11::u8path;
using ::std::filesystem::__cxx11::_Dir;
using ::std::filesystem::__cxx11::__directory_iterator_proxy;
using ::std::filesystem::__cxx11::begin;
using ::std::filesystem::__cxx11::end;
} // namespace __cxx11
using ::std::filesystem::space_info;
using ::std::filesystem::file_type;
using ::std::filesystem::copy_options;
using ::std::filesystem::operator&;
using ::std::filesystem::operator|;
using ::std::filesystem::operator^;
using ::std::filesystem::operator~;
using ::std::filesystem::operator&=;
using ::std::filesystem::operator|=;
using ::std::filesystem::operator^=;
using ::std::filesystem::perms;
using ::std::filesystem::perm_options;
using ::std::filesystem::directory_options;
using ::std::filesystem::file_time_type;
using ::std::filesystem::copy;
using ::std::filesystem::copy_file;
using ::std::filesystem::current_path;
using ::std::filesystem::exists;
using ::std::filesystem::is_other;
using ::std::filesystem::file_size;
using ::std::filesystem::hard_link_count;
using ::std::filesystem::last_write_time;
using ::std::filesystem::permissions;
using ::std::filesystem::proximate;
using ::std::filesystem::relative;
using ::std::filesystem::status;
using ::std::filesystem::status_known;
using ::std::filesystem::symlink_status;
using ::std::filesystem::is_regular_file;
using ::std::filesystem::is_symlink;
using ::std::filesystem::remove;
using ::std::filesystem::remove_all;
using ::std::filesystem::absolute;
using ::std::filesystem::canonical;
using ::std::filesystem::copy_symlink;
using ::std::filesystem::create_directories;
using ::std::filesystem::create_directory;
using ::std::filesystem::create_directory_symlink;
using ::std::filesystem::create_hard_link;
using ::std::filesystem::create_symlink;
using ::std::filesystem::equivalent;
using ::std::filesystem::is_block_file;
using ::std::filesystem::is_character_file;
using ::std::filesystem::is_directory;
using ::std::filesystem::is_empty;
using ::std::filesystem::is_fifo;
using ::std::filesystem::is_socket;
using ::std::filesystem::read_symlink;
using ::std::filesystem::rename;
using ::std::filesystem::resize_file;
using ::std::filesystem::space;
using ::std::filesystem::temp_directory_path;
using ::std::filesystem::weakly_canonical;
} // namespace filesystem
namespace chrono {
using ::std::chrono::duration;
using ::std::chrono::time_point;
using ::std::chrono::__duration_cast_impl;
using ::std::chrono::__is_duration;
using ::std::chrono::__enable_if_is_duration;
using ::std::chrono::__disable_if_is_duration;
using ::std::chrono::__is_duration_v;
using ::std::chrono::__is_time_point_v;
using ::std::chrono::duration_cast;
using ::std::chrono::treat_as_floating_point;
using ::std::chrono::treat_as_floating_point_v;
using ::std::chrono::is_clock_v;
using ::std::chrono::is_clock;
using ::std::chrono::floor;
using ::std::chrono::ceil;
using ::std::chrono::round;
using ::std::chrono::abs;
namespace __detail {
using ::std::chrono::__detail::ceil;
using ::std::chrono::__detail::__clock_convs;
using ::std::chrono::__detail::__clock_convs_sys;
using ::std::chrono::__detail::__clock_convs_utc;
using ::std::chrono::__detail::__clock_convs_sys_utc;
using ::std::chrono::__detail::__clock_convs_utc_sys;
using ::std::chrono::__detail::__modulo;
using ::std::chrono::__detail::__days_per_month;
using ::std::chrono::__detail::__months_years_conversion_disambiguator;
using ::std::chrono::__detail::__pow10;
using ::std::chrono::__detail::__utc_leap_second;
using ::std::chrono::__detail::__get_leap_second_info;
using ::std::chrono::__detail::_Widen;
using ::std::chrono::__detail::__units_suffix_misc;
using ::std::chrono::__detail::__units_suffix;
using ::std::chrono::__detail::__local_time_fmt;
using ::std::chrono::__detail::__local_fmt_t;
} // namespace __detail
using ::std::chrono::duration_values;
using ::std::chrono::operator+;
using ::std::chrono::operator-;
using ::std::chrono::__common_rep_t;
using ::std::chrono::operator*;
using ::std::chrono::operator/;
using ::std::chrono::operator%;
using ::std::chrono::operator==;
using ::std::chrono::operator<;
using ::std::chrono::operator<=>;
using ::std::chrono::operator<=;
using ::std::chrono::operator>;
using ::std::chrono::operator>=;
using ::std::chrono::nanoseconds;
using ::std::chrono::microseconds;
using ::std::chrono::milliseconds;
using ::std::chrono::seconds;
using ::std::chrono::minutes;
using ::std::chrono::hours;
using ::std::chrono::days;
using ::std::chrono::weeks;
using ::std::chrono::years;
using ::std::chrono::months;
using ::std::chrono::time_point_cast;
inline namespace _V2 {
using ::std::chrono::_V2::system_clock;
using ::std::chrono::_V2::steady_clock;
using ::std::chrono::_V2::high_resolution_clock;
} // namespace _V2
using ::std::chrono::sys_time;
using ::std::chrono::sys_seconds;
using ::std::chrono::sys_days;
using ::std::chrono::file_clock;
using ::std::chrono::file_time;
using ::std::chrono::local_t;
using ::std::chrono::local_time;
using ::std::chrono::local_seconds;
using ::std::chrono::local_days;
using ::std::chrono::utc_clock;
using ::std::chrono::tai_clock;
using ::std::chrono::gps_clock;
using ::std::chrono::utc_time;
using ::std::chrono::utc_seconds;
using ::std::chrono::tai_time;
using ::std::chrono::tai_seconds;
using ::std::chrono::gps_time;
using ::std::chrono::gps_seconds;
using ::std::chrono::leap_second_info;
using ::std::chrono::get_leap_second_info;
using ::std::chrono::clock_time_conversion;
using ::std::chrono::__is_time_point_for_v;
using ::std::chrono::clock_cast;
using ::std::chrono::day;
using ::std::chrono::month;
using ::std::chrono::year;
using ::std::chrono::weekday;
using ::std::chrono::weekday_indexed;
using ::std::chrono::weekday_last;
using ::std::chrono::month_day;
using ::std::chrono::month_day_last;
using ::std::chrono::month_weekday;
using ::std::chrono::month_weekday_last;
using ::std::chrono::year_month;
using ::std::chrono::year_month_day;
using ::std::chrono::year_month_day_last;
using ::std::chrono::year_month_weekday;
using ::std::chrono::year_month_weekday_last;
using ::std::chrono::last_spec;
using ::std::chrono::last;
using ::std::chrono::January;
using ::std::chrono::February;
using ::std::chrono::March;
using ::std::chrono::April;
using ::std::chrono::May;
using ::std::chrono::June;
using ::std::chrono::July;
using ::std::chrono::August;
using ::std::chrono::September;
using ::std::chrono::October;
using ::std::chrono::November;
using ::std::chrono::December;
using ::std::chrono::Sunday;
using ::std::chrono::Monday;
using ::std::chrono::Tuesday;
using ::std::chrono::Wednesday;
using ::std::chrono::Thursday;
using ::std::chrono::Friday;
using ::std::chrono::Saturday;
using ::std::chrono::hh_mm_ss;
using ::std::chrono::is_am;
using ::std::chrono::is_pm;
using ::std::chrono::make12;
using ::std::chrono::make24;
using ::std::chrono::tzdb;
using ::std::chrono::sys_info;
using ::std::chrono::local_info;
using ::std::chrono::nonexistent_local_time;
using ::std::chrono::ambiguous_local_time;
using ::std::chrono::__throw_bad_local_time;
using ::std::chrono::choose;
using ::std::chrono::time_zone;
using ::std::chrono::locate_zone;
using ::std::chrono::current_zone;
using ::std::chrono::tzdb_list;
using ::std::chrono::time_zone_link;
using ::std::chrono::leap_second;
using ::std::chrono::zoned_traits;
using ::std::chrono::get_tzdb_list;
using ::std::chrono::get_tzdb;
using ::std::chrono::reload_tzdb;
using ::std::chrono::remote_version;
using ::std::chrono::zoned_time;
using ::std::chrono::__time_zone_representation;
using ::std::chrono::zoned_seconds;
using ::std::chrono::operator<<;
using ::std::chrono::local_time_format;
} // namespace chrono
using ::std::__duration_common_type;
using ::std::__timepoint_common_type;
inline namespace literals {
inline namespace chrono_literals {
using ::std::literals::chrono_literals::__check_overflow;
} // namespace chrono_literals
} // namespace literals
using ::std::bad_exception;
using ::std::terminate_handler;
using ::std::set_terminate;
using ::std::get_terminate;
using ::std::terminate;
using ::std::uncaught_exception;
using ::std::uncaught_exceptions;
namespace __exception_ptr {
using ::std::__exception_ptr::exception_ptr;
using ::std::__exception_ptr::rethrow_exception;
using ::std::__exception_ptr::swap;
using ::std::__exception_ptr::__dest_thunk;
} // namespace __exception_ptr
using ::std::exception_ptr;
using ::std::current_exception;
using ::std::make_exception_ptr;
using ::std::rethrow_exception;
using ::std::nested_exception;
using ::std::_Nested_exception;
using ::std::throw_with_nested;
using ::std::rethrow_if_nested;
using ::std::__try_use_facet;
using ::std::errc;
using ::std::__cow_string;
using ::std::__sso_string;
using ::std::logic_error;
using ::std::domain_error;
using ::std::invalid_argument;
using ::std::length_error;
using ::std::out_of_range;
using ::std::runtime_error;
using ::std::range_error;
using ::std::overflow_error;
using ::std::underflow_error;
using ::std::error_code;
using ::std::error_condition;
using ::std::system_error;
using ::std::is_error_code_enum;
using ::std::is_error_condition_enum;
using ::std::is_error_code_enum_v;
using ::std::is_error_condition_enum_v;
inline namespace _V2 {
using ::std::_V2::error_category;
using ::std::_V2::generic_category;
using ::std::_V2::system_category;
using ::std::_V2::rotate;
using ::std::_V2::__rotate;
using ::std::_V2::condition_variable_any;
} // namespace _V2
namespace __adl_only {
using ::std::__adl_only::make_error_code;
using ::std::__adl_only::make_error_condition;
} // namespace __adl_only
using ::std::make_error_code;
using ::std::make_error_condition;
using ::std::_Ios_Fmtflags;
using ::std::_Ios_Openmode;
using ::std::_Ios_Iostate;
using ::std::_Ios_Seekdir;
using ::std::io_errc;
using ::std::iostream_category;
using ::std::boolalpha;
using ::std::noboolalpha;
using ::std::showbase;
using ::std::noshowbase;
using ::std::showpoint;
using ::std::noshowpoint;
using ::std::showpos;
using ::std::noshowpos;
using ::std::skipws;
using ::std::noskipws;
using ::std::uppercase;
using ::std::nouppercase;
using ::std::unitbuf;
using ::std::nounitbuf;
using ::std::internal;
using ::std::left;
using ::std::right;
using ::std::dec;
using ::std::hex;
using ::std::oct;
using ::std::fixed;
using ::std::scientific;
using ::std::hexfloat;
using ::std::defaultfloat;
using ::std::__copy_streambufs_eof;
using ::std::__copy_streambufs;
using ::std::wctrans_t;
using ::std::wctype_t;
using ::std::iswalnum;
using ::std::iswalpha;
using ::std::iswblank;
using ::std::iswcntrl;
using ::std::iswctype;
using ::std::iswdigit;
using ::std::iswgraph;
using ::std::iswlower;
using ::std::iswprint;
using ::std::iswpunct;
using ::std::iswspace;
using ::std::iswupper;
using ::std::iswxdigit;
using ::std::towctrans;
using ::std::towlower;
using ::std::towupper;
using ::std::wctrans;
using ::std::wctype;
using ::std::find;
using ::std::__convert_to_v;
using ::std::__pad;
using ::std::__add_grouping;
using ::std::__write;
using ::std::__ctype_abstract_base;
using ::std::__num_base;
using ::std::__numpunct_cache;
using ::std::__use_cache;
using ::std::__verify_grouping;
using ::std::__int_to_char;
using ::std::__check_facet;
using ::std::endl;
using ::std::ends;
using ::std::flush;
using ::std::__derived_from_ios_base;
using ::std::__rvalue_stream_insertion_t;
using ::std::__syncbuf_base;
using ::std::emit_on_flush;
using ::std::noemit_on_flush;
using ::std::flush_emit;
using ::std::__istream_extract;
using ::std::ws;
using ::std::__rvalue_stream_extraction_t;
using ::std::__check_constructible;
using ::std::__do_uninit_copy;
using ::std::__uninitialized_copy;
using ::std::uninitialized_copy;
using ::std::__do_uninit_fill;
using ::std::__uninitialized_fill;
using ::std::uninitialized_fill;
using ::std::__do_uninit_fill_n;
using ::std::__uninitialized_fill_n;
using ::std::uninitialized_fill_n;
using ::std::__uninitialized_copy_a;
using ::std::__uninitialized_move_a;
using ::std::__uninitialized_move_if_noexcept_a;
using ::std::__uninitialized_fill_a;
using ::std::__uninitialized_fill_n_a;
using ::std::__uninitialized_copy_move;
using ::std::__uninitialized_move_copy;
using ::std::__uninitialized_fill_move;
using ::std::__uninitialized_move_fill;
using ::std::__uninitialized_default_1;
using ::std::__uninitialized_default_n_1;
using ::std::__uninitialized_default;
using ::std::__uninitialized_default_n;
using ::std::__uninitialized_default_a;
using ::std::__uninitialized_default_n_a;
using ::std::__uninitialized_default_novalue_1;
using ::std::__uninitialized_default_novalue_n_1;
using ::std::__uninitialized_default_novalue;
using ::std::__uninitialized_default_novalue_n;
using ::std::__uninitialized_copy_n;
using ::std::__uninitialized_copy_n_pair;
using ::std::uninitialized_copy_n;
using ::std::uninitialized_default_construct;
using ::std::uninitialized_default_construct_n;
using ::std::uninitialized_value_construct;
using ::std::uninitialized_value_construct_n;
using ::std::uninitialized_move;
using ::std::uninitialized_move_n;
using ::std::__relocate_object_a;
using ::std::__is_bitwise_relocatable;
using ::std::__relocate_a_1;
using ::std::__relocate_a;
using ::std::_Vector_base;
using ::std::vector;
using ::std::_Bit_type;
using ::std::__fill_bvector_n;
using ::std::_Bit_reference;
using ::std::_Bit_iterator_base;
using ::std::_Bit_const_iterator;
using ::std::_Bvector_base;
using ::std::__fill_bvector;
using ::std::all_of;
using ::std::any_of;
using ::std::binary_search;
using ::std::clamp;
using ::std::copy_if;
using ::std::copy_n;
using ::std::equal_range;
using ::std::find_end;
using ::std::find_if_not;
using ::std::includes;
using ::std::inplace_merge;
using ::std::is_heap;
using ::std::is_heap_until;
using ::std::is_partitioned;
using ::std::is_sorted;
using ::std::is_sorted_until;
using ::std::make_heap;
using ::std::minmax;
using ::std::minmax_element;
using ::std::next_permutation;
using ::std::none_of;
using ::std::partial_sort_copy;
using ::std::partition_copy;
using ::std::partition_point;
using ::std::pop_heap;
using ::std::prev_permutation;
using ::std::push_heap;
using ::std::remove_if;
using ::std::remove_copy;
using ::std::remove_copy_if;
using ::std::replace_copy;
using ::std::replace_copy_if;
using ::std::reverse;
using ::std::reverse_copy;
using ::std::rotate_copy;
using ::std::shuffle;
using ::std::sort_heap;
using ::std::stable_partition;
using ::std::unique;
using ::std::upper_bound;
using ::std::adjacent_find;
using ::std::count;
using ::std::count_if;
using ::std::find_first_of;
using ::std::find_if;
using ::std::for_each;
using ::std::generate;
using ::std::generate_n;
using ::std::max_element;
using ::std::merge;
using ::std::min_element;
using ::std::nth_element;
using ::std::partial_sort;
using ::std::partition;
using ::std::random_shuffle;
using ::std::replace;
using ::std::replace_if;
using ::std::search;
using ::std::search_n;
using ::std::set_difference;
using ::std::set_intersection;
using ::std::set_symmetric_difference;
using ::std::set_union;
using ::std::sort;
using ::std::stable_sort;
using ::std::transform;
using ::std::unique_copy;
using ::std::__is_heap_until;
using ::std::__is_heap;
using ::std::__push_heap;
using ::std::__adjust_heap;
using ::std::__pop_heap;
using ::std::__make_heap;
using ::std::__sort_heap;
using ::std::uniform_random_bit_generator;
using ::std::uniform_int_distribution;
using ::std::get_temporary_buffer;
using ::std::return_temporary_buffer;
using ::std::_Temporary_buffer;
using ::std::__uninitialized_construct_buf_dispatch;
using ::std::__uninitialized_construct_buf;
using ::std::__move_median_to_first;
using ::std::__find_if_not;
using ::std::__find_if_not_n;
using ::std::__search;
using ::std::__search_n_aux;
using ::std::__search_n;
using ::std::__find_end;
using ::std::__remove_copy_if;
using ::std::__copy_n;
using ::std::__adjacent_find;
using ::std::__unique;
using ::std::__unique_copy;
using ::std::__reverse;
using ::std::__gcd;
using ::std::__partition;
using ::std::__stable_partition_adaptive;
using ::std::__stable_partition;
using ::std::__heap_select;
using ::std::__partial_sort_copy;
using ::std::__unguarded_linear_insert;
using ::std::__insertion_sort;
using ::std::__unguarded_insertion_sort;
using ::std::__final_insertion_sort;
using ::std::__unguarded_partition;
using ::std::__unguarded_partition_pivot;
using ::std::__partial_sort;
using ::std::__introsort_loop;
using ::std::__sort;
using ::std::__introselect;
using ::std::__upper_bound;
using ::std::__equal_range;
using ::std::__move_merge_adaptive;
using ::std::__move_merge_adaptive_backward;
using ::std::__rotate_adaptive;
using ::std::__merge_adaptive;
using ::std::__merge_adaptive_resize;
using ::std::__merge_without_buffer;
using ::std::__inplace_merge;
using ::std::__move_merge;
using ::std::__merge_sort_loop;
using ::std::__chunk_insertion_sort;
using ::std::__merge_sort_with_buffer;
using ::std::__stable_sort_adaptive;
using ::std::__stable_sort_adaptive_resize;
using ::std::__inplace_stable_sort;
using ::std::__includes;
using ::std::__next_permutation;
using ::std::__prev_permutation;
using ::std::__replace_copy_if;
using ::std::__is_sorted_until;
using ::std::__minmax_element;
using ::std::__gen_two_uniform_ints;
using ::std::for_each_n;
using ::std::__merge;
using ::std::__stable_sort;
using ::std::__set_union;
using ::std::__set_intersection;
using ::std::__set_difference;
using ::std::__set_symmetric_difference;
using ::std::__min_element;
using ::std::__max_element;
using ::std::__sample;
using ::std::sample;
using ::std::__allocated_ptr;
using ::std::__allocate_guarded;
using ::std::auto_ptr;
using ::std::default_delete;
using ::std::__uniq_ptr_impl;
using ::std::__uniq_ptr_data;
using ::std::unique_ptr;
using ::std::__uniq_ptr_hash;
using ::std::make_unique;
using ::std::make_unique_for_overwrite;
using ::std::align;
using ::std::assume_aligned;
using ::std::bad_weak_ptr;
using ::std::__throw_bad_weak_ptr;
using ::std::_Lock_policy;
using ::std::__default_lock_policy;
using ::std::_S_single;
using ::std::_S_mutex;
using ::std::_S_atomic;
using ::std::_Mutex_base;
using ::std::_Sp_counted_base;
using ::std::__shared_ptr;
using ::std::__weak_ptr;
using ::std::__enable_shared_from_this;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::owner_less;
using ::std::enable_shared_from_this;
using ::std::__weak_count;
using ::std::__shared_count;
using ::std::_Sp_atomic;
using ::std::_Sp_counted_ptr;
using ::std::_Sp_ebo_helper;
using ::std::_Sp_counted_deleter;
using ::std::_Sp_make_shared_tag;
using ::std::_Sp_alloc_shared_tag;
using ::std::_Sp_counted_ptr_inplace;
using ::std::_Sp_overwrite_tag;
using ::std::_Sp_counted_array_base;
using ::std::_Sp_counted_array;
using ::std::__sp_array_delete;
using ::std::__sp_compatible_with;
using ::std::__sp_is_constructible_arrN;
using ::std::__sp_is_constructible_arr;
using ::std::__sp_is_constructible;
using ::std::__shared_ptr_access;
using ::std::static_pointer_cast;
using ::std::const_pointer_cast;
using ::std::dynamic_pointer_cast;
using ::std::reinterpret_pointer_cast;
using ::std::_Sp_owner_less;
using ::std::__allocate_shared;
using ::std::__make_shared;
using ::std::get_deleter;
using ::std::_NonArray;
using ::std::_UnboundedArray;
using ::std::_BoundedArray;
using ::std::_NotUnboundedArray;
using ::std::allocate_shared;
using ::std::make_shared;
using ::std::__make_shared_arr_tag;
using ::std::__make_shared_arrN_tag;
using ::std::allocate_shared_for_overwrite;
using ::std::make_shared_for_overwrite;
using ::std::__timepunct_cache;
using ::std::__timepunct;
using ::std::__time_get_state;
using ::std::__moneypunct_cache;
using ::std::__codecvt_abstract_base;
using ::std::__do_str_codecvt;
using ::std::__str_codecvt_in;
using ::std::__str_codecvt_in_all;
using ::std::__str_codecvt_out;
using ::std::__str_codecvt_out_all;
using ::std::wbuffer_convert;
using ::std::_Resetiosflags;
using ::std::resetiosflags;
using ::std::_Setiosflags;
using ::std::setiosflags;
using ::std::_Setbase;
using ::std::setbase;
using ::std::_Setfill;
using ::std::setfill;
using ::std::_Setprecision;
using ::std::setprecision;
using ::std::_Setw;
using ::std::setw;
using ::std::_Get_money;
using ::std::get_money;
using ::std::_Put_money;
using ::std::put_money;
using ::std::_Put_time;
using ::std::put_time;
using ::std::_Get_time;
using ::std::get_time;
using ::std::quoted;
using ::std::__array_traits;
using ::std::__to_array;
using ::std::to_array;
using ::std::to_chars_result;
using ::std::from_chars_result;
using ::std::__to_chars_i;
using ::std::to_chars;
using ::std::from_chars;
using ::std::chars_format;
using ::std::__from_chars_float16_t;
using ::std::__from_chars_bfloat16_t;
using ::std::__to_chars_float16_t;
using ::std::__to_chars_bfloat16_t;
using ::std::_Enable_default_constructor_tag;
using ::std::_Enable_default_constructor;
using ::std::_Enable_destructor;
using ::std::_Enable_copy_move;
using ::std::_Enable_special_members;
using ::std::optional;
using ::std::nullopt_t;
using ::std::nullopt;
using ::std::_Optional_func;
using ::std::bad_optional_access;
using ::std::__throw_bad_optional_access;
using ::std::_Optional_payload_base;
using ::std::_Optional_payload;
using ::std::_Optional_base_impl;
using ::std::_Optional_base;
using ::std::__is_optional_v;
using ::std::__converts_from_optional;
using ::std::__assigns_from_optional;
using ::std::__optional_relop_t;
using ::std::__optional_eq_t;
using ::std::__optional_ne_t;
using ::std::__optional_lt_t;
using ::std::__optional_gt_t;
using ::std::__optional_le_t;
using ::std::__optional_ge_t;
using ::std::make_optional;
using ::std::__optional_hash_call_base;
using ::std::dynamic_extent;
using ::std::span;
using ::std::as_bytes;
using ::std::as_writable_bytes;
using ::std::variant;
using ::std::variant_size;
using ::std::variant_size_v;
using ::std::variant_alternative;
using ::std::variant_alternative_t;
using ::std::variant_npos;
using ::std::__do_visit;
using ::std::__variant_cast;
using ::std::holds_alternative;
using ::std::get_if;
using ::std::monostate;
using ::std::visit;
using ::std::bad_variant_access;
using ::std::__throw_bad_variant_access;
using ::std::__variant_hash_call_base_impl;
using ::std::__variant_hash_call_base;
using ::std::basic_format_context;
namespace __format {
using ::std::__format::_Sink;
using ::std::__format::_Sink_iter;
using ::std::__format::__unmatched_left_brace_in_format_string;
using ::std::__format::__unmatched_right_brace_in_format_string;
using ::std::__format::__conflicting_indexing_in_format_string;
using ::std::__format::__invalid_arg_id_in_format_string;
using ::std::__format::__failed_to_parse_format_spec;
using ::std::__format::__parse_integer;
using ::std::__format::__parse_arg_id;
using ::std::__format::_Pres_type;
using ::std::__format::_Align;
using ::std::__format::_Sign;
using ::std::__format::_WidthPrec;
using ::std::__format::__int_from_arg;
using ::std::__format::__is_digit;
using ::std::__format::__is_xdigit;
using ::std::__format::_Spec;
using ::std::__format::__put_sign;
using ::std::__format::__write;
using ::std::__format::__write_padded;
using ::std::__format::__write_padded_as_spec;
using ::std::__format::_Optional_locale;
using ::std::__format::__char;
using ::std::__format::__formatter_str;
using ::std::__format::__formatter_int;
using ::std::__format::to_chars;
using ::std::__format::__formattable_float;
using ::std::__format::__formatter_fp;
using ::std::__format::__parsable_with;
using ::std::__format::__formattable_with;
using ::std::__format::_Iter_for;
using ::std::__format::__formattable_impl;
using ::std::__format::_Buf_sink;
using ::std::__format::_Seq_sink;
using ::std::__format::_Str_sink;
using ::std::__format::_Iter_sink;
using ::std::__format::_Arg_t;
using ::std::__format::_Arg_value;
using ::std::__format::_Arg_store;
using ::std::__format::_WidthPrecVisitor;
using ::std::__format::__pack_arg_types;
using ::std::__format::__do_vformat_to;
using ::std::__format::_Scanner;
using ::std::__format::_Formatting_scanner;
using ::std::__format::_Checking_scanner;
using ::std::__format::_Counting_sink;
using ::std::__format::__no_timezone_available;
using ::std::__format::__not_valid_for_duration;
using ::std::__format::__invalid_chrono_spec;
using ::std::__format::_ChronoSpec;
using ::std::__format::_ChronoParts;
using ::std::__format::operator|;
using ::std::__format::__formatter_chrono;
} // namespace __format
using ::std::format_context;
using ::std::wformat_context;
using ::std::basic_format_args;
using ::std::format_args;
using ::std::wformat_args;
using ::std::basic_format_arg;
using ::std::basic_format_string;
using ::std::format_string;
using ::std::wformat_string;
using ::std::formatter;
using ::std::format_error;
using ::std::__throw_format_error;
using ::std::basic_format_parse_context;
using ::std::format_parse_context;
using ::std::wformat_parse_context;
using ::std::formattable;
using ::std::format_to_n_result;
using ::std::visit_format_arg;
using ::std::make_format_args;
using ::std::make_wformat_args;
using ::std::vformat_to;
using ::std::vformat;
using ::std::format;
using ::std::format_to;
using ::std::format_to_n;
using ::std::formatted_size;
using ::std::jmp_buf;
using ::std::longjmp;
using ::std::sig_atomic_t;
using ::std::signal;
using ::std::raise;
using ::std::va_list;
using ::std::bad_function_call;
using ::std::__is_location_invariant;
using ::std::_Undefined_class;
using ::std::_Nocopy_types;
using ::std::_Any_data;
using ::std::_Manager_operation;
using ::std::function;
using ::std::_Function_base;
using ::std::_Function_handler;
using ::std::_Target_handler;
using ::std::__function_guide_helper;
using ::std::__function_guide_t;
using ::std::_Hashtable;
using ::std::_Node_handle_common;
using ::std::_Node_handle;
using ::std::_Node_insert_return;
using ::std::__cache_default;
using ::std::_Hashtable_enable_default_ctor;
using ::std::_Hash_merge_helper;
using ::std::_RequireNotAllocatorOrIntegral;
using ::std::__umap_traits;
using ::std::__umap_hashtable;
using ::std::__ummap_traits;
using ::std::__ummap_hashtable;
using ::std::unordered_multimap;
using ::std::unordered_map;
using ::std::move_only_function;
using ::std::_Mofunc_base;
using ::std::__is_move_only_function_v;
using ::std::_Placeholder;
using ::std::invoke;
using ::std::invoke_r;
using ::std::_Mem_fn_base;
using ::std::_Mem_fn;
using ::std::mem_fn;
using ::std::is_bind_expression;
using ::std::is_placeholder;
using ::std::is_bind_expression_v;
using ::std::is_placeholder_v;
namespace placeholders {
using ::std::placeholders::_1;
using ::std::placeholders::_2;
using ::std::placeholders::_3;
using ::std::placeholders::_4;
using ::std::placeholders::_5;
using ::std::placeholders::_6;
using ::std::placeholders::_7;
using ::std::placeholders::_8;
using ::std::placeholders::_9;
using ::std::placeholders::_10;
using ::std::placeholders::_11;
using ::std::placeholders::_12;
using ::std::placeholders::_13;
using ::std::placeholders::_14;
using ::std::placeholders::_15;
using ::std::placeholders::_16;
using ::std::placeholders::_17;
using ::std::placeholders::_18;
using ::std::placeholders::_19;
using ::std::placeholders::_20;
using ::std::placeholders::_21;
using ::std::placeholders::_22;
using ::std::placeholders::_23;
using ::std::placeholders::_24;
using ::std::placeholders::_25;
using ::std::placeholders::_26;
using ::std::placeholders::_27;
using ::std::placeholders::_28;
using ::std::placeholders::_29;
} // namespace placeholders
using ::std::_Safe_tuple_element_t;
using ::std::_Mu;
using ::std::__volget;
using ::std::_Bind;
using ::std::_Bind_result;
using ::std::_Bind_check_arity;
using ::std::__is_socketlike;
using ::std::_Bind_helper;
using ::std::bind;
using ::std::_Bindres_helper;
using ::std::_Bind_front;
using ::std::_Bind_front0;
using ::std::_Bind_front_t;
using ::std::bind_front;
using ::std::_Not_fn;
using ::std::__is_byte_like;
using ::std::not_fn;
using ::std::default_searcher;
using ::std::__boyer_moore_map_base;
using ::std::__boyer_moore_array_base;
using ::std::__boyer_moore_base_t;
using ::std::boyer_moore_searcher;
using ::std::boyer_moore_horspool_searcher;
using ::std::source_location;
using ::std::type_index;
namespace rel_ops {
using ::std::rel_ops::operator!=;
using ::std::rel_ops::operator>;
using ::std::rel_ops::operator<=;
using ::std::rel_ops::operator>=;
} // namespace rel_ops
using ::std::exchange;
using ::std::as_const;
using ::std::cmp_equal;
using ::std::cmp_not_equal;
using ::std::cmp_less;
using ::std::cmp_greater;
using ::std::cmp_less_equal;
using ::std::cmp_greater_equal;
using ::std::in_range;
using ::std::to_underlying;
using ::std::unreachable;
using ::std::raw_storage_iterator;
using ::std::__mutex_base;
using ::std::mutex;
using ::std::__condvar;
using ::std::defer_lock_t;
using ::std::try_to_lock_t;
using ::std::adopt_lock_t;
using ::std::defer_lock;
using ::std::try_to_lock;
using ::std::adopt_lock;
using ::std::lock_guard;
using ::std::__platform_wait_uses_type;
using ::std::__atomic_wait_address_v;
using ::std::__atomic_wait_address;
using ::std::__atomic_wait_address_bare;
using ::std::__atomic_notify_address;
using ::std::__atomic_notify_address_bare;
using ::std::memory_order;
using ::std::memory_order_relaxed;
using ::std::memory_order_consume;
using ::std::memory_order_acquire;
using ::std::memory_order_release;
using ::std::memory_order_acq_rel;
using ::std::memory_order_seq_cst;
using ::std::__memory_order_modifier;
using ::std::__cmpexch_failure_order2;
using ::std::__cmpexch_failure_order;
using ::std::__is_valid_cmpexch_failure_order;
using ::std::__atomic_base;
using ::std::atomic_thread_fence;
using ::std::atomic_signal_fence;
using ::std::kill_dependency;
using ::std::atomic;
using ::std::__atomic_flag_data_type;
using ::std::atomic_flag;
namespace __atomic_impl {
using ::std::__atomic_impl::__maybe_has_padding;
using ::std::__atomic_impl::__clear_padding;
using ::std::__atomic_impl::_Val;
using ::std::__atomic_impl::__compare_exchange;
using ::std::__atomic_impl::_Diff;
using ::std::__atomic_impl::is_lock_free;
using ::std::__atomic_impl::store;
using ::std::__atomic_impl::load;
using ::std::__atomic_impl::exchange;
using ::std::__atomic_impl::compare_exchange_weak;
using ::std::__atomic_impl::compare_exchange_strong;
using ::std::__atomic_impl::wait;
using ::std::__atomic_impl::notify_one;
using ::std::__atomic_impl::notify_all;
using ::std::__atomic_impl::fetch_add;
using ::std::__atomic_impl::fetch_sub;
using ::std::__atomic_impl::fetch_and;
using ::std::__atomic_impl::fetch_or;
using ::std::__atomic_impl::fetch_xor;
using ::std::__atomic_impl::__add_fetch;
using ::std::__atomic_impl::__sub_fetch;
using ::std::__atomic_impl::__and_fetch;
using ::std::__atomic_impl::__or_fetch;
using ::std::__atomic_impl::__xor_fetch;
using ::std::__atomic_impl::__fetch_add_flt;
using ::std::__atomic_impl::__fetch_sub_flt;
using ::std::__atomic_impl::__add_fetch_flt;
using ::std::__atomic_impl::__sub_fetch_flt;
} // namespace __atomic_impl
using ::std::__atomic_float;
using ::std::__atomic_ref;
using ::std::_Sp_locker;
using ::std::atomic_is_lock_free;
using ::std::atomic_load_explicit;
using ::std::atomic_load;
using ::std::atomic_store_explicit;
using ::std::atomic_store;
using ::std::atomic_exchange_explicit;
using ::std::atomic_exchange;
using ::std::atomic_compare_exchange_strong_explicit;
using ::std::atomic_compare_exchange_strong;
using ::std::atomic_compare_exchange_weak_explicit;
using ::std::atomic_compare_exchange_weak;
using ::std::auto_ptr_ref;
using ::std::shared_mutex;
using ::std::shared_timed_mutex;
using ::std::__shared_mutex_pthread;
using ::std::__shared_timed_mutex_base;
using ::std::shared_lock;
using ::std::scoped_allocator_adaptor;
using ::std::__outer_allocator_t;
using ::std::__outermost_type;
using ::std::__outermost;
using ::std::__inner_type_impl;
using ::std::imaxdiv_t;
using ::std::imaxabs;
using ::std::imaxdiv;
using ::std::strtoimax;
using ::std::strtoumax;
using ::std::wcstoimax;
using ::std::wcstoumax;
using ::std::memchr;
using ::std::memcmp;
using ::std::memcpy;
using ::std::memmove;
using ::std::memset;
using ::std::strcat;
using ::std::strcmp;
using ::std::strcoll;
using ::std::strcpy;
using ::std::strcspn;
using ::std::strerror;
using ::std::strlen;
using ::std::strncat;
using ::std::strncmp;
using ::std::strncpy;
using ::std::strspn;
using ::std::strtok;
using ::std::strxfrm;
using ::std::strchr;
using ::std::strpbrk;
using ::std::strrchr;
using ::std::strstr;
using ::std::mbrtoc8;
using ::std::c8rtomb;
using ::std::mbrtoc16;
using ::std::c16rtomb;
using ::std::mbrtoc32;
using ::std::c32rtomb;
using ::std::__deque_buf_size;
using ::std::_Deque_base;
using ::std::deque;
using ::std::__copy_move_dit;
using ::std::__copy_move_backward_dit;
using ::std::__equal_dit;
using ::std::__lex_cmp_dit;
using ::std::_Fwd_list_node_base;
using ::std::_Fwd_list_node;
using ::std::_Fwd_list_iterator;
using ::std::_Fwd_list_const_iterator;
using ::std::_Fwd_list_base;
using ::std::forward_list;
using ::std::_List_node;
using ::std::_Rb_tree_color;
using ::std::_Rb_tree_node_base;
using ::std::_Rb_tree_key_compare;
using ::std::_Rb_tree_header;
using ::std::_Rb_tree_node;
using ::std::_Rb_tree_increment;
using ::std::_Rb_tree_decrement;
using ::std::_Rb_tree_iterator;
using ::std::_Rb_tree_const_iterator;
using ::std::_Rb_tree_insert_and_rebalance;
using ::std::_Rb_tree_rebalance_for_erase;
using ::std::_Rb_tree_merge_helper;
using ::std::_Rb_tree;
using ::std::_Rb_tree_black_count;
using ::std::multimap;
using ::std::map;
using ::std::queue;
using ::std::priority_queue;
using ::std::multiset;
using ::std::set;
using ::std::stack;
using ::std::__uset_traits;
using ::std::__uset_hashtable;
using ::std::__umset_traits;
using ::std::__umset_hashtable;
using ::std::unordered_multiset;
using ::std::unordered_set;
using ::std::istream_iterator;
using ::std::ostream_iterator;
namespace views = ranges::views;
using ::std::shift_left;
using ::std::shift_right;
using ::std::rotate;
using ::std::is_execution_policy;
using ::std::is_execution_policy_v;
namespace execution {
using ::std::execution::parallel_policy;
using ::std::execution::parallel_unsequenced_policy;
using ::std::execution::sequenced_policy;
using ::std::execution::par;
using ::std::execution::par_unseq;
using ::std::execution::seq;
using ::std::execution::unseq;
using ::std::execution::unsequenced_policy;
} // namespace execution
using ::std::iota;
using ::std::accumulate;
using ::std::inner_product;
using ::std::partial_sum;
using ::std::adjacent_difference;
using ::std::gcd;
using ::std::lcm;
using ::std::midpoint;
using ::std::reduce;
using ::std::transform_reduce;
using ::std::exclusive_scan;
using ::std::inclusive_scan;
using ::std::transform_exclusive_scan;
using ::std::transform_inclusive_scan;
using ::std::atomic_bool;
using ::std::atomic_char;
using ::std::atomic_schar;
using ::std::atomic_uchar;
using ::std::atomic_short;
using ::std::atomic_ushort;
using ::std::atomic_int;
using ::std::atomic_uint;
using ::std::atomic_long;
using ::std::atomic_ulong;
using ::std::atomic_llong;
using ::std::atomic_ullong;
using ::std::atomic_wchar_t;
using ::std::atomic_char8_t;
using ::std::atomic_char16_t;
using ::std::atomic_char32_t;
using ::std::atomic_int8_t;
using ::std::atomic_uint8_t;
using ::std::atomic_int16_t;
using ::std::atomic_uint16_t;
using ::std::atomic_int32_t;
using ::std::atomic_uint32_t;
using ::std::atomic_int64_t;
using ::std::atomic_uint64_t;
using ::std::atomic_int_least8_t;
using ::std::atomic_uint_least8_t;
using ::std::atomic_int_least16_t;
using ::std::atomic_uint_least16_t;
using ::std::atomic_int_least32_t;
using ::std::atomic_uint_least32_t;
using ::std::atomic_int_least64_t;
using ::std::atomic_uint_least64_t;
using ::std::atomic_int_fast8_t;
using ::std::atomic_uint_fast8_t;
using ::std::atomic_int_fast16_t;
using ::std::atomic_uint_fast16_t;
using ::std::atomic_int_fast32_t;
using ::std::atomic_uint_fast32_t;
using ::std::atomic_int_fast64_t;
using ::std::atomic_uint_fast64_t;
using ::std::atomic_intptr_t;
using ::std::atomic_uintptr_t;
using ::std::atomic_size_t;
using ::std::atomic_ptrdiff_t;
using ::std::atomic_intmax_t;
using ::std::atomic_uintmax_t;
using ::std::atomic_flag_test_and_set_explicit;
using ::std::atomic_flag_test;
using ::std::atomic_flag_test_explicit;
using ::std::atomic_flag_clear_explicit;
using ::std::atomic_flag_test_and_set;
using ::std::atomic_flag_clear;
using ::std::atomic_flag_wait;
using ::std::atomic_flag_wait_explicit;
using ::std::atomic_flag_notify_one;
using ::std::atomic_flag_notify_all;
using ::std::__atomic_val_t;
using ::std::__atomic_diff_t;
using ::std::atomic_init;
using ::std::atomic_wait;
using ::std::atomic_wait_explicit;
using ::std::atomic_notify_one;
using ::std::atomic_notify_all;
using ::std::atomic_fetch_add_explicit;
using ::std::atomic_fetch_sub_explicit;
using ::std::atomic_fetch_and_explicit;
using ::std::atomic_fetch_or_explicit;
using ::std::atomic_fetch_xor_explicit;
using ::std::atomic_fetch_add;
using ::std::atomic_fetch_sub;
using ::std::atomic_fetch_and;
using ::std::atomic_fetch_or;
using ::std::atomic_fetch_xor;
using ::std::atomic_ref;
using ::std::atomic_signed_lock_free;
using ::std::atomic_unsigned_lock_free;
using ::std::fenv_t;
using ::std::fexcept_t;
using ::std::feclearexcept;
using ::std::fegetexceptflag;
using ::std::feraiseexcept;
using ::std::fesetexceptflag;
using ::std::fetestexcept;
using ::std::fegetround;
using ::std::fesetround;
using ::std::fegetenv;
using ::std::feholdexcept;
using ::std::fesetenv;
using ::std::feupdateenv;
using ::std::acos;
using ::std::asin;
using ::std::atan;
using ::std::atan2;
using ::std::ceil;
using ::std::cos;
using ::std::cosh;
using ::std::exp;
using ::std::fabs;
using ::std::floor;
using ::std::fmod;
using ::std::frexp;
using ::std::ldexp;
using ::std::log;
using ::std::log10;
using ::std::modf;
using ::std::pow;
using ::std::sin;
using ::std::sinh;
using ::std::sqrt;
using ::std::tan;
using ::std::tanh;
using ::std::fpclassify;
using ::std::isfinite;
using ::std::isinf;
using ::std::isnan;
using ::std::isnormal;
using ::std::signbit;
using ::std::isgreater;
using ::std::isgreaterequal;
using ::std::isless;
using ::std::islessequal;
using ::std::islessgreater;
using ::std::isunordered;
using ::std::double_t;
using ::std::float_t;
using ::std::acosh;
using ::std::acoshf;
using ::std::acoshl;
using ::std::asinh;
using ::std::asinhf;
using ::std::asinhl;
using ::std::atanh;
using ::std::atanhf;
using ::std::atanhl;
using ::std::cbrt;
using ::std::cbrtf;
using ::std::cbrtl;
using ::std::copysign;
using ::std::copysignf;
using ::std::copysignl;
using ::std::erf;
using ::std::erff;
using ::std::erfl;
using ::std::erfc;
using ::std::erfcf;
using ::std::erfcl;
using ::std::exp2;
using ::std::exp2f;
using ::std::exp2l;
using ::std::expm1;
using ::std::expm1f;
using ::std::expm1l;
using ::std::fdim;
using ::std::fdimf;
using ::std::fdiml;
using ::std::fma;
using ::std::fmaf;
using ::std::fmal;
using ::std::fmax;
using ::std::fmaxf;
using ::std::fmaxl;
using ::std::fmin;
using ::std::fminf;
using ::std::fminl;
using ::std::hypot;
using ::std::hypotf;
using ::std::hypotl;
using ::std::ilogb;
using ::std::ilogbf;
using ::std::ilogbl;
using ::std::lgamma;
using ::std::lgammaf;
using ::std::lgammal;
using ::std::llrint;
using ::std::llrintf;
using ::std::llrintl;
using ::std::llround;
using ::std::llroundf;
using ::std::llroundl;
using ::std::log1p;
using ::std::log1pf;
using ::std::log1pl;
using ::std::log2;
using ::std::log2f;
using ::std::log2l;
using ::std::logb;
using ::std::logbf;
using ::std::logbl;
using ::std::lrint;
using ::std::lrintf;
using ::std::lrintl;
using ::std::lround;
using ::std::lroundf;
using ::std::lroundl;
using ::std::nan;
using ::std::nanf;
using ::std::nanl;
using ::std::nearbyint;
using ::std::nearbyintf;
using ::std::nearbyintl;
using ::std::nextafter;
using ::std::nextafterf;
using ::std::nextafterl;
using ::std::nexttoward;
using ::std::nexttowardf;
using ::std::nexttowardl;
using ::std::remainder;
using ::std::remainderf;
using ::std::remainderl;
using ::std::remquo;
using ::std::remquof;
using ::std::remquol;
using ::std::rint;
using ::std::rintf;
using ::std::rintl;
using ::std::round;
using ::std::roundf;
using ::std::roundl;
using ::std::scalbln;
using ::std::scalblnf;
using ::std::scalblnl;
using ::std::scalbn;
using ::std::scalbnf;
using ::std::scalbnl;
using ::std::tgamma;
using ::std::tgammaf;
using ::std::tgammal;
using ::std::trunc;
using ::std::truncf;
using ::std::truncl;
using ::std::__hypot3;
using ::std::__lerp;
using ::std::lerp;
using ::std::assoc_laguerref;
using ::std::assoc_laguerrel;
using ::std::assoc_laguerre;
using ::std::assoc_legendref;
using ::std::assoc_legendrel;
using ::std::assoc_legendre;
using ::std::betaf;
using ::std::betal;
using ::std::beta;
using ::std::comp_ellint_1f;
using ::std::comp_ellint_1l;
using ::std::comp_ellint_1;
using ::std::comp_ellint_2f;
using ::std::comp_ellint_2l;
using ::std::comp_ellint_2;
using ::std::comp_ellint_3f;
using ::std::comp_ellint_3l;
using ::std::comp_ellint_3;
using ::std::cyl_bessel_if;
using ::std::cyl_bessel_il;
using ::std::cyl_bessel_i;
using ::std::cyl_bessel_jf;
using ::std::cyl_bessel_jl;
using ::std::cyl_bessel_j;
using ::std::cyl_bessel_kf;
using ::std::cyl_bessel_kl;
using ::std::cyl_bessel_k;
using ::std::cyl_neumannf;
using ::std::cyl_neumannl;
using ::std::cyl_neumann;
using ::std::ellint_1f;
using ::std::ellint_1l;
using ::std::ellint_1;
using ::std::ellint_2f;
using ::std::ellint_2l;
using ::std::ellint_2;
using ::std::ellint_3f;
using ::std::ellint_3l;
using ::std::ellint_3;
using ::std::expintf;
using ::std::expintl;
using ::std::expint;
using ::std::hermitef;
using ::std::hermitel;
using ::std::hermite;
using ::std::laguerref;
using ::std::laguerrel;
using ::std::laguerre;
using ::std::legendref;
using ::std::legendrel;
using ::std::legendre;
using ::std::riemann_zetaf;
using ::std::riemann_zetal;
using ::std::riemann_zeta;
using ::std::sph_besself;
using ::std::sph_bessell;
using ::std::sph_bessel;
using ::std::sph_legendref;
using ::std::sph_legendrel;
using ::std::sph_legendre;
using ::std::sph_neumannf;
using ::std::sph_neumannl;
using ::std::sph_neumann;
using ::std::complex;
using ::std::arg;
using ::std::norm;
using ::std::conj;
using ::std::polar;
using ::std::operator*;
using ::std::operator/;
using ::std::real;
using ::std::imag;
using ::std::__complex_abs;
using ::std::__complex_arg;
using ::std::_Norm_helper;
using ::std::__complex_cos;
using ::std::__complex_cosh;
using ::std::__complex_exp;
using ::std::__complex_log;
using ::std::__complex_sin;
using ::std::__complex_sinh;
using ::std::__complex_sqrt;
using ::std::__complex_tan;
using ::std::__complex_tanh;
using ::std::__complex_pow_unsigned;
using ::std::__complex_pow;
using ::std::__complex_type;
using ::std::__complex_acos;
using ::std::__complex_asin;
using ::std::__complex_atan;
using ::std::__complex_acosh;
using ::std::__complex_asinh;
using ::std::__complex_atanh;
using ::std::proj;
using ::std::__complex_proj;
using ::std::generate_canonical;
using ::std::linear_congruential_engine;
using ::std::mersenne_twister_engine;
using ::std::subtract_with_carry_engine;
using ::std::discard_block_engine;
using ::std::independent_bits_engine;
using ::std::shuffle_order_engine;
using ::std::minstd_rand0;
using ::std::minstd_rand;
using ::std::mt19937;
using ::std::mt19937_64;
using ::std::ranlux24_base;
using ::std::ranlux48_base;
using ::std::ranlux24;
using ::std::ranlux48;
using ::std::knuth_b;
using ::std::default_random_engine;
using ::std::random_device;
using ::std::uniform_real_distribution;
using ::std::normal_distribution;
using ::std::lognormal_distribution;
using ::std::gamma_distribution;
using ::std::chi_squared_distribution;
using ::std::cauchy_distribution;
using ::std::fisher_f_distribution;
using ::std::student_t_distribution;
using ::std::bernoulli_distribution;
using ::std::binomial_distribution;
using ::std::geometric_distribution;
using ::std::negative_binomial_distribution;
using ::std::poisson_distribution;
using ::std::exponential_distribution;
using ::std::weibull_distribution;
using ::std::extreme_value_distribution;
using ::std::discrete_distribution;
using ::std::piecewise_constant_distribution;
using ::std::piecewise_linear_distribution;
using ::std::seed_seq;
using ::std::_Expr;
using ::std::_ValArray;
using ::std::_UnClos;
using ::std::_BinClos;
using ::std::_SClos;
using ::std::_GClos;
using ::std::_IClos;
using ::std::_ValFunClos;
using ::std::_RefFunClos;
using ::std::slice;
using ::std::slice_array;
using ::std::gslice;
using ::std::gslice_array;
using ::std::mask_array;
using ::std::indirect_array;
using ::std::__valarray_get_storage;
using ::std::__valarray_release_memory;
using ::std::_Array_default_ctor;
using ::std::__valarray_default_construct;
using ::std::_Array_init_ctor;
using ::std::__valarray_fill_construct;
using ::std::_Array_copy_ctor;
using ::std::__valarray_copy_construct;
using ::std::__valarray_destroy_elements;
using ::std::__valarray_fill;
using ::std::_Array_copier;
using ::std::__valarray_copy;
using ::std::__valarray_sum;
using ::std::__valarray_min;
using ::std::__valarray_max;
using ::std::_Array;
using ::std::_Constant;
using ::std::_Abs;
using ::std::_Cos;
using ::std::_Acos;
using ::std::_Cosh;
using ::std::_Sin;
using ::std::_Asin;
using ::std::_Sinh;
using ::std::_Tan;
using ::std::_Atan;
using ::std::_Tanh;
using ::std::_Exp;
using ::std::_Log;
using ::std::_Log10;
using ::std::_Sqrt;
using ::std::__unary_plus;
using ::std::__negate;
using ::std::__bitwise_not;
using ::std::__plus;
using ::std::__minus;
using ::std::__multiplies;
using ::std::__divides;
using ::std::__modulus;
using ::std::__bitwise_xor;
using ::std::__bitwise_and;
using ::std::__bitwise_or;
using ::std::__shift_left;
using ::std::__shift_right;
using ::std::__logical_and;
using ::std::__logical_or;
using ::std::__logical_not;
using ::std::__equal_to;
using ::std::__not_equal_to;
using ::std::__less;
using ::std::__greater;
using ::std::__less_equal;
using ::std::__greater_equal;
using ::std::_Atan2;
using ::std::_Pow;
using ::std::__fun_with_valarray;
using ::std::__fun;
using ::std::codecvt_mode;
using ::std::codecvt_utf8;
using ::std::codecvt_utf16;
using ::std::codecvt_utf8_utf16;
using ::std::__codecvt_utf8_base;
using ::std::__codecvt_utf16_base;
using ::std::__codecvt_utf8_utf16_base;
using ::std::__c_lock;
using ::std::__c_file;
using ::std::__basic_file;
using ::std::_If_fs_path;
using ::std::cin;
using ::std::cout;
using ::std::cerr;
using ::std::clog;
using ::std::wcin;
using ::std::wcout;
using ::std::wcerr;
using ::std::wclog;
namespace regex_constants {
using ::std::regex_constants::syntax_option_type;
using ::std::regex_constants::icase;
using ::std::regex_constants::nosubs;
using ::std::regex_constants::optimize;
using ::std::regex_constants::collate;
using ::std::regex_constants::ECMAScript;
using ::std::regex_constants::basic;
using ::std::regex_constants::extended;
using ::std::regex_constants::awk;
using ::std::regex_constants::grep;
using ::std::regex_constants::egrep;
using ::std::regex_constants::multiline;
using ::std::regex_constants::__multiline;
using ::std::regex_constants::__polynomial;
using ::std::regex_constants::operator&;
using ::std::regex_constants::operator|;
using ::std::regex_constants::operator^;
using ::std::regex_constants::operator~;
using ::std::regex_constants::operator&=;
using ::std::regex_constants::operator|=;
using ::std::regex_constants::operator^=;
using ::std::regex_constants::match_flag_type;
using ::std::regex_constants::match_default;
using ::std::regex_constants::match_not_bol;
using ::std::regex_constants::match_not_eol;
using ::std::regex_constants::match_not_bow;
using ::std::regex_constants::match_not_eow;
using ::std::regex_constants::match_any;
using ::std::regex_constants::match_not_null;
using ::std::regex_constants::match_continuous;
using ::std::regex_constants::match_prev_avail;
using ::std::regex_constants::format_default;
using ::std::regex_constants::format_sed;
using ::std::regex_constants::format_no_copy;
using ::std::regex_constants::format_first_only;
using ::std::regex_constants::error_type;
using ::std::regex_constants::error_collate;
using ::std::regex_constants::error_ctype;
using ::std::regex_constants::error_escape;
using ::std::regex_constants::error_backref;
using ::std::regex_constants::error_brack;
using ::std::regex_constants::error_paren;
using ::std::regex_constants::error_brace;
using ::std::regex_constants::error_badbrace;
using ::std::regex_constants::error_range;
using ::std::regex_constants::error_space;
using ::std::regex_constants::error_badrepeat;
using ::std::regex_constants::error_complexity;
using ::std::regex_constants::error_stack;
} // namespace regex_constants
using ::std::regex_error;
using ::std::__throw_regex_error;
using ::std::regex_match;
using ::std::regex_search;
using ::std::__regex_replace;
using ::std::regex_replace;
using ::std::thread;
namespace this_thread {
using ::std::this_thread::get_id;
using ::std::this_thread::yield;
using ::std::this_thread::sleep_for;
using ::std::this_thread::sleep_until;
} // namespace this_thread
using ::std::__empty_completion;
using ::std::__barrier_phase_t;
using ::std::__tree_barrier;
using ::std::barrier;
using ::std::unique_lock;
using ::std::__atomic_wait_address_until_v;
using ::std::__atomic_wait_address_until;
using ::std::__atomic_wait_address_until_bare;
using ::std::__atomic_wait_address_for_v;
using ::std::__atomic_wait_address_for;
using ::std::__atomic_wait_address_for_bare;
using ::std::__platform_semaphore;
using ::std::__atomic_semaphore;
using ::std::__semaphore_impl;
using ::std::counting_semaphore;
using ::std::binary_semaphore;
using ::std::nostopstate_t;
using ::std::nostopstate;
using ::std::stop_source;
using ::std::stop_token;
using ::std::stop_callback;
using ::std::cv_status;
using ::std::condition_variable;
using ::std::notify_all_at_thread_exit;
using ::std::__at_thread_exit_elt;
using ::std::__recursive_mutex_base;
using ::std::recursive_mutex;
using ::std::__timed_mutex_impl;
using ::std::timed_mutex;
using ::std::recursive_timed_mutex;
using ::std::try_lock;
using ::std::lock;
using ::std::scoped_lock;
using ::std::once_flag;
using ::std::__once_callable;
using ::std::__once_call;
using ::std::call_once;
using ::std::__atomic_futex_unsigned_base;
using ::std::__atomic_futex_unsigned;
using ::std::future_errc;
using ::std::future_category;
using ::std::future_error;
using ::std::future;
using ::std::shared_future;
using ::std::packaged_task;
using ::std::promise;
using ::std::launch;
using ::std::future_status;
using ::std::__async_result_of;
using ::std::async;
using ::std::__future_base;
using ::std::__basic_future;
using ::std::latch;
using ::std::jthread;
} // namespace std
namespace __gnu_cxx {
using ::__gnu_cxx::__enable_if;
using ::__gnu_cxx::__conditional_type;
using ::__gnu_cxx::__add_unsigned;
using ::__gnu_cxx::__remove_unsigned;
using ::__gnu_cxx::__is_null_pointer;
using ::__gnu_cxx::__promote;
using ::__gnu_cxx::__promoted_t;
using ::__gnu_cxx::__promote_2;
using ::__gnu_cxx::__promote_3;
using ::__gnu_cxx::__promote_4;
using ::__gnu_cxx::__is_integer_nonstrict;
using ::__gnu_cxx::__numeric_traits_integer;
using ::__gnu_cxx::__int_traits;
using ::__gnu_cxx::__numeric_traits_floating;
using ::__gnu_cxx::__numeric_traits;
using ::__gnu_cxx::__normal_iterator;
using ::__gnu_cxx::operator==;
using ::__gnu_cxx::operator<=>;
using ::__gnu_cxx::operator-;
using ::__gnu_cxx::operator+;
namespace __ops {
using ::__gnu_cxx::__ops::_Iter_less_iter;
using ::__gnu_cxx::__ops::__iter_less_iter;
using ::__gnu_cxx::__ops::_Iter_less_val;
using ::__gnu_cxx::__ops::__iter_less_val;
using ::__gnu_cxx::__ops::__iter_comp_val;
using ::__gnu_cxx::__ops::_Val_less_iter;
using ::__gnu_cxx::__ops::__val_less_iter;
using ::__gnu_cxx::__ops::__val_comp_iter;
using ::__gnu_cxx::__ops::_Iter_equal_to_iter;
using ::__gnu_cxx::__ops::__iter_equal_to_iter;
using ::__gnu_cxx::__ops::_Iter_equal_to_val;
using ::__gnu_cxx::__ops::__iter_equal_to_val;
using ::__gnu_cxx::__ops::_Iter_comp_iter;
using ::__gnu_cxx::__ops::__iter_comp_iter;
using ::__gnu_cxx::__ops::_Iter_comp_val;
using ::__gnu_cxx::__ops::_Val_comp_iter;
using ::__gnu_cxx::__ops::_Iter_equals_val;
using ::__gnu_cxx::__ops::__iter_equals_val;
using ::__gnu_cxx::__ops::_Iter_equals_iter;
using ::__gnu_cxx::__ops::_Iter_pred;
using ::__gnu_cxx::__ops::__pred_iter;
using ::__gnu_cxx::__ops::_Iter_comp_to_val;
using ::__gnu_cxx::__ops::_Iter_comp_to_iter;
using ::__gnu_cxx::__ops::_Iter_negate;
using ::__gnu_cxx::__ops::__negate;
} // namespace __ops
using ::__gnu_cxx::wcstold;
using ::__gnu_cxx::wcstoll;
using ::__gnu_cxx::wcstoull;
using ::__gnu_cxx::_Char_types;
using ::__gnu_cxx::char_traits;
using ::__gnu_cxx::__alloc_traits;
using ::__gnu_cxx::lldiv_t;
using ::__gnu_cxx::_Exit;
using ::__gnu_cxx::llabs;
using ::__gnu_cxx::div;
using ::__gnu_cxx::lldiv;
using ::__gnu_cxx::atoll;
using ::__gnu_cxx::strtoll;
using ::__gnu_cxx::strtoull;
using ::__gnu_cxx::strtof;
using ::__gnu_cxx::strtold;
using ::__gnu_cxx::snprintf;
using ::__gnu_cxx::vfscanf;
using ::__gnu_cxx::vscanf;
using ::__gnu_cxx::vsnprintf;
using ::__gnu_cxx::vsscanf;
using ::__gnu_cxx::__stoa;
using ::__gnu_cxx::__to_xstring;
using ::__gnu_cxx::__verbose_terminate_handler;
using ::__gnu_cxx::__is_single_threaded;
using ::__gnu_cxx::__exchange_and_add;
using ::__gnu_cxx::__atomic_add;
using ::__gnu_cxx::__exchange_and_add_single;
using ::__gnu_cxx::__atomic_add_single;
using ::__gnu_cxx::__exchange_and_add_dispatch;
using ::__gnu_cxx::__atomic_add_dispatch;
using ::__gnu_cxx::__aligned_membuf;
using ::__gnu_cxx::__aligned_buffer;
using ::__gnu_cxx::_Lock_policy;
using ::__gnu_cxx::__default_lock_policy;
using ::__gnu_cxx::__concurrence_lock_error;
using ::__gnu_cxx::__concurrence_unlock_error;
using ::__gnu_cxx::__concurrence_broadcast_error;
using ::__gnu_cxx::__concurrence_wait_error;
using ::__gnu_cxx::__throw_concurrence_lock_error;
using ::__gnu_cxx::__throw_concurrence_unlock_error;
using ::__gnu_cxx::__throw_concurrence_broadcast_error;
using ::__gnu_cxx::__throw_concurrence_wait_error;
using ::__gnu_cxx::__mutex;
using ::__gnu_cxx::__recursive_mutex;
using ::__gnu_cxx::__scoped_lock;
using ::__gnu_cxx::__cond;
} // namespace __gnu_cxx
}
